{"version":3,"file":"CoreExtension-legacy-55f55375.js","sources":["../../node_modules/@lightningjs/renderer/dist/src/utils.js","../../node_modules/@lightningjs/renderer/dist/src/core/lib/utils.js","../../node_modules/@lightningjs/renderer/dist/src/common/EventEmitter.js","../../node_modules/@lightningjs/renderer/dist/src/core/utils.js","../../node_modules/@lightningjs/renderer/dist/src/core/renderers/CoreContextTexture.js","../../node_modules/@lightningjs/renderer/dist/src/core/renderers/CoreRenderer.js","../../node_modules/@lightningjs/renderer/dist/src/core/renderers/CoreRenderOp.js","../../node_modules/@lightningjs/renderer/dist/src/core/renderers/CoreShader.js","../../node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/internal/ShaderUtils.js","../../node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/internal/WebGlUtils.js","../../node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreShader.js","../../node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreRenderOp.js","../../node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/internal/RendererUtils.js","../../node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreCtxTexture.js","../../node_modules/@lightningjs/renderer/dist/src/core/textures/Texture.js","../../node_modules/@lightningjs/renderer/dist/src/core/textures/ColorTexture.js","../../node_modules/@lightningjs/renderer/dist/src/core/textures/SubTexture.js","../../node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreCtxSubTexture.js","../../node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/internal/BufferCollection.js","../../node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreRenderer.js","../../node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/TrFontFace.js","../../node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/SpecialCodepoints.js","../../node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/SdfTrFontFace/internal/SdfFontShaper.js","../../node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/SdfTrFontFace/internal/FontShaper.js","../../node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/SdfTrFontFace/SdfTrFontFace.js","../../node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/WebTrFontFace.js","../../node_modules/@lightningjs/renderer/dist/src/core/CoreExtension.js"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function createWebGLContext(canvas) {\n    const config = {\n        alpha: true,\n        antialias: false,\n        depth: false,\n        stencil: true,\n        desynchronized: false,\n        // Disabled because it prevents Visual Regression Tests from working\n        // failIfMajorPerformanceCaveat: true,\n        powerPreference: 'high-performance',\n        premultipliedAlpha: true,\n        preserveDrawingBuffer: false,\n    };\n    return (\n    // TODO: Remove this assertion once this issue is fixed in TypeScript\n    // https://github.com/microsoft/TypeScript/issues/53614\n    (canvas.getContext('webgl', config) ||\n        canvas.getContext('experimental-webgl', config)));\n}\n/**\n * Asserts a condition is truthy, otherwise throws an error\n *\n * @remarks\n * Useful at the top of functions to ensure certain conditions, arguments and\n * properties are set/met before continuing. When using this function,\n * TypeScript will narrow away falsy types from the condition.\n *\n * @param condition\n * @param message\n * @returns\n */\nexport function assertTruthy(condition, message) {\n    if (!condition) {\n        throw new Error(message || 'Assertion failed');\n    }\n}\n/**\n * Merges two colors based on a given progress value.\n *\n * This function takes two colors (c1 and c2) represented as 32-bit integers\n * in RGBA format and blends them based on the provided progress value (p).\n * The result is a new color that is a weighted combination of the input colors,\n * where the weight is determined by the progress value.\n *\n * @param {number} c1 - The first color in RGBA format (32-bit integer).\n * @param {number} c2 - The second color in RGBA format (32-bit integer).\n * @param {number} p - The progress value between 0 and 1.\n * @returns {number} The merged color as a 32-bit integer in RGBA format.\n */\nexport function mergeColorProgress(rgba1, rgba2, p) {\n    const r1 = Math.trunc(rgba1 >>> 24);\n    const g1 = Math.trunc((rgba1 >>> 16) & 0xff);\n    const b1 = Math.trunc((rgba1 >>> 8) & 0xff);\n    const a1 = Math.trunc(rgba1 & 0xff);\n    const r2 = Math.trunc(rgba2 >>> 24);\n    const g2 = Math.trunc((rgba2 >>> 16) & 0xff);\n    const b2 = Math.trunc((rgba2 >>> 8) & 0xff);\n    const a2 = Math.trunc(rgba2 & 0xff);\n    const r = Math.round(r2 * p + r1 * (1 - p));\n    const g = Math.round(g2 * p + g1 * (1 - p));\n    const b = Math.round(b2 * p + b1 * (1 - p));\n    const a = Math.round(a2 * p + a1 * (1 - p));\n    return ((r << 24) | (g << 16) | (b << 8) | a) >>> 0;\n}\n/**\n * Given an RGBA encoded number, returns back the RGBA number with it's alpha\n * component multiplied by the passed `alpha` parameter.\n *\n * @internalRemarks\n * This method does NOT premultiply the alpha into the color channels. If that\n * is required (for internal use only) use {@link mergeColorAlphaPremultiplied}\n * instead.\n *\n * @param rgba RGBA encoded number\n * @param alpha Normalized alpha value (Range: 0.0 - 1.0)\n * @returns\n */\nexport function mergeColorAlpha(rgba, alpha) {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = Math.trunc((rgba & 0xff) * alpha);\n    return ((r << 24) | (g << 16) | (b << 8) | a) >>> 0;\n}\n/**\n * Given an RGBA encoded number, returns back the RGBA number with it's alpha\n * component multiplied by the passed `alpha` parameter. Before returning, the\n * final alpha value is multiplied into the color channels.\n *\n * @remarks\n * If `flipEndianess` is set to true, the function will returned an ABGR encoded number\n * which is useful when the color value needs to be passed into a shader attribute.\n *\n * NOTE: This method returns a PREMULTIPLIED alpha color which is generally only useful\n * in the context of the internal rendering process. Use {@link mergeColorAlpha} if you\n * need to blend an alpha value into a color in the context of the Renderer's\n * main API.\n *\n * @internalRemarks\n * Do not expose this method in the main API because Renderer users should instead use\n * {@link mergeColorAlpha} to manipulate the alpha value of a color.\n *\n * @internal\n * @param rgba RGBA encoded number\n * @param alpha Normalized alpha value (Range: 0.0 - 1.0)\n * @param flipEndianess Flip the endianess. RGBA becomes encoded as ABGR (for inserting colors into shader attributes)\n * @returns\n */\nexport function mergeColorAlphaPremultiplied(rgba, alpha, flipEndianess = false) {\n    const newAlpha = ((rgba & 0xff) / 255) * alpha;\n    const r = Math.trunc((rgba >>> 24) * newAlpha);\n    const g = Math.trunc(((rgba >>> 16) & 0xff) * newAlpha);\n    const b = Math.trunc(((rgba >>> 8) & 0xff) * newAlpha);\n    const a = Math.trunc(newAlpha * 255);\n    if (flipEndianess) {\n        return ((a << 24) | (b << 16) | (g << 8) | r) >>> 0;\n    }\n    return ((r << 24) | (g << 16) | (b << 8) | a) >>> 0;\n}\n/**\n * Returns true if the given object has the given \"own\" property.\n *\n * @param obj\n * @param prop\n * @returns\n */\nexport function hasOwn(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n/**\n * Converts degrees to radians\n *\n * @param degrees\n * @returns\n */\nexport function deg2Rad(degrees) {\n    return (degrees * Math.PI) / 180;\n}\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const getNormalizedRgbaComponents = (rgba) => {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = rgba & 0xff;\n    return [r / 255, g / 255, b / 255, a / 255];\n};\nexport const getRgbaComponents = (rgba) => {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = rgba & 0xff;\n    return [r, g, b, a];\n};\nexport const norm = (rgba) => {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = rgba & 0xff;\n    const rgbaArr = [r / 255, g / 255, b / 255, a / 255];\n    rgbaArr[0] = Math.max(0, Math.min(255, rgbaArr[0]));\n    rgbaArr[1] = Math.max(0, Math.min(255, rgbaArr[1]));\n    rgbaArr[2] = Math.max(0, Math.min(255, rgbaArr[2]));\n    rgbaArr[3] = Math.max(0, Math.min(255, rgbaArr[3]));\n    let v = ((rgbaArr[3] | 0) << 24) +\n        ((rgbaArr[0] | 0) << 16) +\n        ((rgbaArr[1] | 0) << 8) +\n        (rgbaArr[2] | 0);\n    if (v < 0) {\n        v = 0xffffffff + v + 1;\n    }\n    return v;\n};\nexport function getNormalizedAlphaComponent(rgba) {\n    return (rgba & 0xff) / 255.0;\n}\n/**\n * Get a CSS color string from a RGBA color\n *\n * @param color\n * @returns\n */\nexport function getRgbaString(color) {\n    const r = Math.floor(color[0] * 255.0);\n    const g = Math.floor(color[1] * 255.0);\n    const b = Math.floor(color[2] * 255.0);\n    const a = Math.floor(color[3] * 255.0);\n    return `rgba(${r},${g},${b},${a.toFixed(4)})`;\n}\nexport function createBound(x1, y1, x2, y2, out) {\n    if (out) {\n        out.x1 = x1;\n        out.y1 = y1;\n        out.x2 = x2;\n        out.y2 = y2;\n        return out;\n    }\n    return {\n        x1,\n        y1,\n        x2,\n        y2,\n    };\n}\nexport function intersectBound(a, b, out) {\n    const intersection = createBound(Math.max(a.x1, b.x1), Math.max(a.y1, b.y1), Math.min(a.x2, b.x2), Math.min(a.y2, b.y2), out);\n    if (intersection.x1 < intersection.x2 && intersection.y1 < intersection.y2) {\n        return intersection;\n    }\n    return createBound(0, 0, 0, 0, intersection);\n}\nexport function intersectRect(a, b) {\n    const x = Math.max(a.x, b.x);\n    const y = Math.max(a.y, b.y);\n    const width = Math.min(a.x + a.width, b.x + b.width) - x;\n    const height = Math.min(a.y + a.height, b.y + b.height) - y;\n    if (width > 0 && height > 0) {\n        return {\n            x,\n            y,\n            width,\n            height,\n        };\n    }\n    return {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0,\n    };\n}\nexport function compareRect(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a === null || b === null) {\n        return false;\n    }\n    return (a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height);\n}\nexport function isBoundPositive(bound) {\n    return bound.x1 < bound.x2 && bound.y1 < bound.y2;\n}\nexport function isRectPositive(rect) {\n    return rect.width > 0 && rect.height > 0;\n}\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * EventEmitter base class\n */\nexport class EventEmitter {\n    eventListeners = {};\n    on(event, listener) {\n        let listeners = this.eventListeners[event];\n        if (!listeners) {\n            listeners = [];\n        }\n        listeners.push(listener);\n        this.eventListeners[event] = listeners;\n    }\n    off(event, listener) {\n        const listeners = this.eventListeners[event];\n        if (!listeners) {\n            return;\n        }\n        if (!listener) {\n            delete this.eventListeners[event];\n            return;\n        }\n        const index = listeners.indexOf(listener);\n        if (index >= 0) {\n            listeners.splice(index, 1);\n        }\n    }\n    once(event, listener) {\n        const onceListener = (target, data) => {\n            this.off(event, onceListener);\n            listener(target, data);\n        };\n        this.on(event, onceListener);\n    }\n    emit(event, data) {\n        const listeners = this.eventListeners[event];\n        if (!listeners) {\n            return;\n        }\n        [...listeners].forEach((listener) => {\n            listener(this, data);\n        });\n    }\n    removeAllListeners() {\n        this.eventListeners = {};\n    }\n}\n//# sourceMappingURL=EventEmitter.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Core Utility Functions\n *\n * @module\n */\nexport const EPSILON = 0.000001;\nexport let ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport const RANDOM = Math.random;\nexport const ANGLE_ORDER = 'zyx';\nconst degree = Math.PI / 180;\nexport const setMatrixArrayType = (type) => {\n    ARRAY_TYPE = type;\n};\nexport const toRadian = (a) => {\n    return a * degree;\n};\nexport const equals = (a, b) => {\n    return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n};\nexport const rand = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\nexport const isPowerOfTwo = (value) => {\n    return value && !(value & (value - 1));\n};\nconst getTimingBezier = (a, b, c, d) => {\n    const xc = 3.0 * a;\n    const xb = 3.0 * (c - a) - xc;\n    const xa = 1.0 - xc - xb;\n    const yc = 3.0 * b;\n    const yb = 3.0 * (d - b) - yc;\n    const ya = 1.0 - yc - yb;\n    return function (time) {\n        if (time >= 1.0) {\n            return 1;\n        }\n        if (time <= 0) {\n            return 0;\n        }\n        let t = 0.5, cbx, cbxd, dx;\n        for (let it = 0; it < 20; it++) {\n            cbx = t * (t * (t * xa + xb) + xc);\n            dx = time - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                return t * (t * (t * ya + yb) + yc);\n            }\n            // Cubic bezier derivative.\n            cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n            if (cbxd > 1e-10 && cbxd < 1e-10) {\n                // Problematic. Fall back to binary search method.\n                break;\n            }\n            t += dx / cbxd;\n        }\n        // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n        let minT = 0;\n        let maxT = 1;\n        for (let it = 0; it < 20; it++) {\n            t = 0.5 * (minT + maxT);\n            cbx = t * (t * (t * xa + xb) + xc);\n            dx = time - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc);\n            }\n            if (dx < 0) {\n                maxT = t;\n            }\n            else {\n                minT = t;\n            }\n        }\n    };\n};\nexport const getTimingFunction = (str) => {\n    switch (str) {\n        case 'linear':\n            return function (time) {\n                return time;\n            };\n        case 'ease':\n            return getTimingBezier(0.25, 0.1, 0.25, 1.0);\n        case 'ease-in':\n            return getTimingBezier(0.42, 0, 1.0, 1.0);\n        case 'ease-out':\n            return getTimingBezier(0, 0, 0.58, 1.0);\n        case 'ease-in-out':\n            return getTimingBezier(0.42, 0, 0.58, 1.0);\n        case 'ease-in-sine':\n            return getTimingBezier(0.12, 0, 0.39, 0);\n        case 'ease-out-sine':\n            return getTimingBezier(0.12, 0, 0.39, 0);\n        case 'ease-in-out-sine':\n            return getTimingBezier(0.37, 0, 0.63, 1);\n        case 'ease-in-cubic':\n            return getTimingBezier(0.32, 0, 0.67, 0);\n        case 'ease-out-cubic':\n            return getTimingBezier(0.33, 1, 0.68, 1);\n        case 'ease-in-out-cubic':\n            return getTimingBezier(0.65, 0, 0.35, 1);\n        case 'ease-in-circ':\n            return getTimingBezier(0.55, 0, 1, 0.45);\n        case 'ease-out-circ':\n            return getTimingBezier(0, 0.55, 0.45, 1);\n        case 'ease-in-out-circ':\n            return getTimingBezier(0.85, 0, 0.15, 1);\n        case 'ease-in-back':\n            return getTimingBezier(0.36, 0, 0.66, -0.56);\n        case 'ease-out-back':\n            return getTimingBezier(0.34, 1.56, 0.64, 1);\n        case 'ease-in-out-back':\n            return getTimingBezier(0.68, -0.6, 0.32, 1.6);\n        case 'step-start':\n            return function () {\n                return 1;\n            };\n        case 'step-end':\n            return function (time) {\n                return time === 1 ? 1 : 0;\n            };\n        default:\n            // eslint-disable-next-line no-case-declarations\n            const s = 'cubic-bezier(';\n            if (str && str.indexOf(s) === 0) {\n                const parts = str\n                    .substr(s.length, str.length - s.length - 1)\n                    .split(',');\n                if (parts.length !== 4) {\n                    console.warn('Unknown timing function: ' + str);\n                    // Fallback: use linear.\n                    return function (time) {\n                        return time;\n                    };\n                }\n                const a = parseFloat(parts[0] || '0.42');\n                const b = parseFloat(parts[1] || '0');\n                const c = parseFloat(parts[2] || '1');\n                const d = parseFloat(parts[3] || '1');\n                if (isNaN(a) || isNaN(b) || isNaN(c) || isNaN(d)) {\n                    console.warn(' Unknown timing function: ' + str);\n                    // Fallback: use linear.\n                    return function (time) {\n                        return time;\n                    };\n                }\n                return getTimingBezier(a, b, c, d);\n            }\n            else {\n                console.warn('Unknown timing function: ' + str);\n                // Fallback: use linear.\n                return function (time) {\n                    return time;\n                };\n            }\n    }\n};\nif (!Math.hypot)\n    Math.hypot = (...args) => {\n        let y = 0, i = args.length;\n        while (i--) {\n            y += args[i] * args[i];\n        }\n        return Math.sqrt(y);\n    };\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class CoreContextTexture {\n    textureSource;\n    constructor(textureSource) {\n        this.textureSource = textureSource;\n    }\n}\n//# sourceMappingURL=CoreContextTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CoreContextTexture } from './CoreContextTexture.js';\nexport class CoreRenderer {\n    stage;\n    constructor(stage) {\n        this.stage = stage;\n    }\n}\n//# sourceMappingURL=CoreRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class CoreRenderOp {\n}\n//# sourceMappingURL=CoreRenderOp.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class CoreShader {\n    // abstract draw(): void;\n    static makeCacheKey(props) {\n        return false;\n    }\n    static resolveDefaults(props) {\n        return {};\n    }\n}\n//# sourceMappingURL=CoreShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n//#endregion Types\nexport function createShader(gl, type, source) {\n    const shader = gl.createShader(type);\n    if (!shader) {\n        throw new Error();\n    }\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (success) {\n        return shader;\n    }\n    console.log(gl.getShaderInfoLog(shader));\n    gl.deleteShader(shader);\n}\nexport function createProgram(gl, vertexShader, fragmentShader) {\n    const program = gl.createProgram();\n    if (!program) {\n        throw new Error();\n    }\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    const success = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (success) {\n        return program;\n    }\n    console.log(gl.getProgramInfoLog(program));\n    gl.deleteProgram(program);\n    return undefined;\n}\n//# sourceMappingURL=ShaderUtils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generic WebGL Utility Functions\n *\n * @remarks\n * Nothing here should be coupled to Renderer logic / types.\n *\n * @param gl\n * @returns\n */\nexport function isWebGl2(gl) {\n    return (self.WebGL2RenderingContext && gl instanceof self.WebGL2RenderingContext);\n}\n//# sourceMappingURL=WebGlUtils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy, hasOwn } from '../../../utils.js';\nimport { CoreShader } from '../CoreShader.js';\nimport { createProgram, createShader, } from './internal/ShaderUtils.js';\nimport { isWebGl2 } from './internal/WebGlUtils.js';\nexport class WebGlCoreShader extends CoreShader {\n    boundBufferCollection = null;\n    buffersBound = false;\n    program;\n    /**\n     * Vertex Array Object\n     *\n     * @remarks\n     * Used by WebGL2 Only\n     */\n    vao;\n    renderer;\n    gl;\n    attributeBuffers;\n    attributeLocations;\n    attributeNames;\n    uniformLocations;\n    uniformTypes;\n    supportsIndexedTextures;\n    constructor(options) {\n        super();\n        const renderer = (this.renderer = options.renderer);\n        const gl = (this.gl = this.renderer.gl);\n        this.supportsIndexedTextures = options.supportsIndexedTextures || false;\n        // Check that extensions are supported\n        const webGl2 = isWebGl2(gl);\n        const requiredExtensions = (webGl2 && options.webgl2Extensions) ||\n            (!webGl2 && options.webgl1Extensions) ||\n            [];\n        const glVersion = webGl2 ? '2.0' : '1.0';\n        requiredExtensions.forEach((extensionName) => {\n            if (!gl.getExtension(extensionName)) {\n                throw new Error(`Shader \"${this.constructor.name}\" requires extension \"${extensionName}\" for WebGL ${glVersion} but wasn't found`);\n            }\n        });\n        // Gather shader sources\n        // - If WebGL 2 and special WebGL 2 sources are provided, we copy those sources and delete\n        // the extra copy of them to save memory.\n        // TODO: This could be further made optimal by just caching the compiled shaders and completely deleting\n        // the source code\n        const shaderSources = options.shaderSources ||\n            this.constructor.shaderSources;\n        if (!shaderSources) {\n            throw new Error(`Shader \"${this.constructor.name}\" is missing shaderSources.`);\n        }\n        else if (webGl2 && shaderSources?.webGl2) {\n            shaderSources.fragment = shaderSources.webGl2.fragment;\n            shaderSources.vertex = shaderSources.webGl2.vertex;\n            delete shaderSources.webGl2;\n        }\n        const textureUnits = renderer.system.parameters.MAX_VERTEX_TEXTURE_IMAGE_UNITS;\n        const vertexSource = shaderSources.vertex instanceof Function\n            ? shaderSources.vertex(textureUnits)\n            : shaderSources.vertex;\n        const fragmentSource = shaderSources.fragment instanceof Function\n            ? shaderSources.fragment(textureUnits)\n            : shaderSources.fragment;\n        const vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexSource);\n        const fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, fragmentSource);\n        if (!vertexShader || !fragmentShader) {\n            throw new Error();\n        }\n        const program = createProgram(gl, vertexShader, fragmentShader);\n        if (!program) {\n            throw new Error();\n        }\n        this.program = program;\n        if (webGl2) {\n            const vao = gl.createVertexArray();\n            if (!vao) {\n                throw new Error();\n            }\n            this.vao = vao;\n            gl.bindVertexArray(this.vao);\n        }\n        this.attributeLocations = {};\n        this.attributeBuffers = {};\n        this.attributeNames = [];\n        [...options.attributes].forEach((attributeName) => {\n            const location = gl.getAttribLocation(this.program, attributeName);\n            if (location < 0) {\n                throw new Error(`${this.constructor.name}: Vertex shader must have an attribute \"${attributeName}\"!`);\n            }\n            const buffer = gl.createBuffer();\n            if (!buffer) {\n                throw new Error(`${this.constructor.name}: Could not create buffer for attribute \"${attributeName}\"`);\n            }\n            this.attributeLocations[attributeName] = location;\n            this.attributeBuffers[attributeName] = buffer;\n            this.attributeNames.push(attributeName);\n        });\n        this.uniformLocations = {};\n        this.uniformTypes = {};\n        options.uniforms.forEach((uniform) => {\n            const location = gl.getUniformLocation(this.program, uniform.name);\n            this.uniformTypes[uniform.name] = uniform.uniform;\n            if (!location) {\n                console.warn(`Shader \"${this.constructor.name}\" could not get uniform location for \"${uniform.name}\"`);\n                return;\n            }\n            this.uniformLocations[uniform.name] = location;\n        });\n    }\n    bindBufferAttribute(location, buffer, attribute) {\n        const gl = this.gl;\n        gl.enableVertexAttribArray(location);\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.vertexAttribPointer(location, attribute.size, attribute.type, attribute.normalized, attribute.stride, attribute.offset);\n    }\n    disableAttribute(location) {\n        this.gl.disableVertexAttribArray(location);\n    }\n    disableAttributes() {\n        for (const loc in this.attributeLocations) {\n            this.disableAttribute(this.attributeLocations[loc]);\n        }\n        this.boundBufferCollection = null;\n    }\n    /**\n     * Given two sets of Shader props destined for this Shader, determine if they can be batched together\n     * to reduce the number of draw calls.\n     *\n     * @remarks\n     * This is used by the {@link WebGlCoreRenderer} to determine if it can batch multiple consecutive draw\n     * calls into a single draw call.\n     *\n     * By default, this returns false (meaning no batching is allowed), but can be\n     * overridden by child classes to provide more efficient batching.\n     *\n     * @param propsA\n     * @param propsB\n     * @returns\n     */\n    canBatchShaderProps(propsA, propsB) {\n        return false;\n    }\n    bindRenderOp(renderOp, props) {\n        this.bindBufferCollection(renderOp.buffers);\n        if (renderOp.textures.length > 0) {\n            this.bindTextures(renderOp.textures);\n        }\n        const { gl } = renderOp;\n        // Bind standard automatic uniforms\n        this.setUniform('u_resolution', [gl.canvas.width, gl.canvas.height]); // !!!\n        this.setUniform('u_pixelRatio', renderOp.options.pixelRatio);\n        if (props) {\n            // Bind optional automatic uniforms\n            // These are only bound if their keys are present in the props.\n            if (hasOwn(props, '$dimensions')) {\n                let dimensions = props.$dimensions;\n                if (!dimensions) {\n                    dimensions = renderOp.dimensions;\n                }\n                this.setUniform('u_dimensions', [dimensions.width, dimensions.height]);\n            }\n            if (hasOwn(props, '$alpha')) {\n                let alpha = props.$alpha;\n                if (!alpha) {\n                    alpha = renderOp.alpha;\n                }\n                this.setUniform('u_alpha', alpha);\n            }\n            this.bindProps(props);\n        }\n    }\n    setUniform(name, ...value) {\n        // @ts-expect-error Typing of args is too funky apparently for TS\n        this.gl[this.uniformTypes[name]](this.uniformLocations[name], ...value);\n    }\n    bindBufferCollection(buffer) {\n        if (this.boundBufferCollection === buffer) {\n            return;\n        }\n        for (const attributeName in this.attributeLocations) {\n            const resolvedBuffer = buffer.getBuffer(attributeName);\n            const resolvedInfo = buffer.getAttributeInfo(attributeName);\n            assertTruthy(resolvedBuffer, `Buffer for \"${attributeName}\" not found`);\n            assertTruthy(resolvedInfo);\n            this.bindBufferAttribute(this.attributeLocations[attributeName], resolvedBuffer, resolvedInfo);\n        }\n        this.boundBufferCollection = buffer;\n    }\n    bindProps(props) {\n        // Implement in child class\n    }\n    bindTextures(textures) {\n        // no defaults\n    }\n    attach() {\n        this.gl.useProgram(this.program);\n        if (isWebGl2(this.gl) && this.vao) {\n            this.gl.bindVertexArray(this.vao);\n        }\n    }\n    detach() {\n        this.disableAttributes();\n    }\n    static shaderSources;\n}\n//# sourceMappingURL=WebGlCoreShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CoreRenderOp } from '../CoreRenderOp.js';\nimport { WebGlCoreShader } from './WebGlCoreShader.js';\nconst MAX_TEXTURES = 8; // TODO: get from gl\n/**\n * Can render multiple quads with multiple textures (up to vertex shader texture limit)\n *\n */\nexport class WebGlCoreRenderOp extends CoreRenderOp {\n    gl;\n    options;\n    buffers;\n    shader;\n    shaderProps;\n    alpha;\n    clippingRect;\n    dimensions;\n    bufferIdx;\n    zIndex;\n    length = 0;\n    numQuads = 0;\n    textures = [];\n    maxTextures;\n    constructor(gl, options, buffers, shader, shaderProps, alpha, clippingRect, dimensions, bufferIdx, zIndex) {\n        super();\n        this.gl = gl;\n        this.options = options;\n        this.buffers = buffers;\n        this.shader = shader;\n        this.shaderProps = shaderProps;\n        this.alpha = alpha;\n        this.clippingRect = clippingRect;\n        this.dimensions = dimensions;\n        this.bufferIdx = bufferIdx;\n        this.zIndex = zIndex;\n        this.gl = gl;\n        this.maxTextures = shader.supportsIndexedTextures\n            ? gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS)\n            : 1;\n    }\n    addTexture(texture) {\n        const { textures, maxTextures } = this;\n        const existingIdx = textures.findIndex((t) => t === texture);\n        if (existingIdx !== -1) {\n            return existingIdx;\n        }\n        const newIdx = textures.length;\n        if (newIdx >= maxTextures) {\n            return 0xffffffff;\n        }\n        this.textures.push(texture);\n        return newIdx;\n    }\n    draw() {\n        const { gl, shader, shaderProps, options } = this;\n        // shaderOp.draw(this);\n        const { shManager } = options;\n        shManager.useShader(shader);\n        shader.bindRenderOp(this, shaderProps);\n        // TODO: Reduce calculations required\n        const quadIdx = (this.bufferIdx / 24) * 6 * 2;\n        // TODO: Move these somewhere else?\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        // Clipping\n        if (this.clippingRect) {\n            const { x, y, width, height } = this.clippingRect;\n            const pixelRatio = options.pixelRatio;\n            const canvasHeight = options.canvas.height;\n            const clipX = Math.round(x * pixelRatio);\n            const clipWidth = Math.round(width * pixelRatio);\n            const clipHeight = Math.round(height * pixelRatio);\n            const clipY = Math.round(canvasHeight - clipHeight - y * pixelRatio);\n            gl.enable(gl.SCISSOR_TEST);\n            gl.scissor(clipX, clipY, clipWidth, clipHeight);\n        }\n        else {\n            gl.disable(gl.SCISSOR_TEST);\n        }\n        gl.drawElements(gl.TRIANGLES, 6 * this.numQuads, gl.UNSIGNED_SHORT, quadIdx);\n    }\n}\n//# sourceMappingURL=WebGlCoreRenderOp.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Get device specific webgl parameters\n * @param gl\n */\nexport function getWebGlParameters(gl) {\n    const params = {\n        MAX_RENDERBUFFER_SIZE: 0,\n        MAX_TEXTURE_SIZE: 0,\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-explicit-any\n        MAX_VIEWPORT_DIMS: 0,\n        MAX_VERTEX_TEXTURE_IMAGE_UNITS: 0,\n        MAX_TEXTURE_IMAGE_UNITS: 0,\n        MAX_COMBINED_TEXTURE_IMAGE_UNITS: 0,\n        MAX_VERTEX_ATTRIBS: 0,\n        MAX_VARYING_VECTORS: 0,\n        MAX_VERTEX_UNIFORM_VECTORS: 0,\n        MAX_FRAGMENT_UNIFORM_VECTORS: 0,\n    };\n    // Map over all parameters and get them\n    const keys = Object.keys(params);\n    keys.forEach((key) => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        params[key] = gl.getParameter(gl[key]);\n    });\n    return params;\n}\n/**\n * Get device webgl extensions\n * @param gl\n */\nexport function getWebGlExtensions(gl) {\n    const extensions = {\n        ANGLE_instanced_arrays: null,\n        WEBGL_compressed_texture_s3tc: null,\n        WEBGL_compressed_texture_astc: null,\n        WEBGL_compressed_texture_etc: null,\n        WEBGL_compressed_texture_etc1: null,\n        WEBGL_compressed_texture_pvrtc: null,\n        WEBKIT_WEBGL_compressed_texture_pvrtc: null,\n        WEBGL_compressed_texture_s3tc_srgb: null,\n        OES_vertex_array_object: null,\n    };\n    // Map over all extensions and get them\n    const keys = Object.keys(extensions);\n    keys.forEach((key) => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        extensions[key] = gl.getExtension(key);\n    });\n    return extensions;\n}\n/**\n * Allocate big memory chunk that we\n * can re-use to draw quads\n * @param size\n */\nexport function createIndexBuffer(gl, size) {\n    if (!gl) {\n        throw new Error('No WebGL context');\n    }\n    const maxQuads = ~~(size / 80);\n    const indices = new Uint16Array(maxQuads * 6);\n    for (let i = 0, j = 0; i < maxQuads; i += 6, j += 4) {\n        indices[i] = j;\n        indices[i + 1] = j + 1;\n        indices[i + 2] = j + 2;\n        indices[i + 3] = j + 2;\n        indices[i + 4] = j + 1;\n        indices[i + 5] = j + 3;\n    }\n    const buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\n}\n//# sourceMappingURL=RendererUtils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../../utils.js';\nimport { isPowerOfTwo } from '../../utils.js';\nimport { CoreContextTexture } from '../CoreContextTexture.js';\nimport { isWebGl2 } from './internal/WebGlUtils.js';\nconst TRANSPARENT_TEXTURE_DATA = new Uint8Array([0, 0, 0, 0]);\n/**\n * A wrapper around a WebGLTexture that handles loading the texture data\n * from a Texture source and uploading it to the GPU as well as freeing\n * the uploaded texture.\n *\n * @remarks\n * When accessing the ctxTexture property, the texture will be loaded if\n * it hasn't been already. ctxTexture will always return a valid WebGLTexture\n * and trigger the loading/uploading of the texture's data if it hasn't been\n * loaded yet.\n */\nexport class WebGlCoreCtxTexture extends CoreContextTexture {\n    gl;\n    _nativeCtxTexture = null;\n    _state = 'freed';\n    _w = 0;\n    _h = 0;\n    constructor(gl, textureSource) {\n        super(textureSource);\n        this.gl = gl;\n    }\n    get ctxTexture() {\n        if (this._state === 'freed') {\n            this.load();\n        }\n        assertTruthy(this._nativeCtxTexture);\n        return this._nativeCtxTexture;\n    }\n    get w() {\n        return this._w;\n    }\n    get h() {\n        return this._h;\n    }\n    /**\n     * Load the texture data from the Texture source and upload it to the GPU\n     *\n     * @remarks\n     * This method is called automatically when accessing the ctxTexture property\n     * if the texture hasn't been loaded yet. But it can also be called manually\n     * to force the texture to be pre-loaded prior to accessing the ctxTexture\n     * property.\n     */\n    load() {\n        // If the texture is already loading or loaded, don't load it again.\n        if (this._state === 'loading' || this._state === 'loaded') {\n            return;\n        }\n        this._state = 'loading';\n        this.textureSource.setState('loading');\n        this.onLoadRequest()\n            .then(({ width, height }) => {\n            this._state = 'loaded';\n            this._w = width;\n            this._h = height;\n            // Update the texture source's width and height so that it can be used\n            // for rendering.\n            this.textureSource.setState('loaded', { width, height });\n        })\n            .catch((err) => {\n            this._state = 'failed';\n            this.textureSource.setState('failed', err);\n            console.error(err);\n        });\n    }\n    /**\n     * Called when the texture data needs to be loaded and uploaded to a texture\n     */\n    async onLoadRequest() {\n        this._nativeCtxTexture = this.createNativeCtxTexture();\n        const { gl } = this;\n        // On initial load request, create a 1x1 transparent texture to use until\n        // the texture data is finally loaded.\n        gl.bindTexture(gl.TEXTURE_2D, this._nativeCtxTexture);\n        // linear texture filtering\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        // texture wrapping method\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.bindTexture(gl.TEXTURE_2D, this._nativeCtxTexture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, TRANSPARENT_TEXTURE_DATA);\n        const textureData = await this.textureSource?.getTextureData();\n        let width = 0;\n        let height = 0;\n        assertTruthy(this._nativeCtxTexture);\n        // If textureData is null, the texture is empty (0, 0) and we don't need to\n        // upload any data to the GPU.\n        if (textureData.data instanceof ImageBitmap ||\n            textureData.data instanceof ImageData) {\n            const data = textureData.data;\n            width = data.width;\n            height = data.height;\n            gl.bindTexture(gl.TEXTURE_2D, this._nativeCtxTexture);\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, !!textureData.premultiplyAlpha);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n            // generate mipmaps for power-of-2 textures or in WebGL2RenderingContext\n            if (isWebGl2(gl) || (isPowerOfTwo(width) && isPowerOfTwo(height))) {\n                gl.generateMipmap(gl.TEXTURE_2D);\n            }\n        }\n        else if (textureData.data === null) {\n            width = 0;\n            height = 0;\n            // Reset to a 1x1 transparent texture\n            gl.bindTexture(gl.TEXTURE_2D, this._nativeCtxTexture);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, TRANSPARENT_TEXTURE_DATA);\n        }\n        else {\n            console.error(`WebGlCoreCtxTexture.onLoadRequest: Unexpected textureData returned`, textureData);\n        }\n        return {\n            width,\n            height,\n        };\n    }\n    /**\n     * Free the WebGLTexture from the GPU\n     *\n     * @returns\n     */\n    free() {\n        if (this._state === 'freed') {\n            return;\n        }\n        this._state = 'freed';\n        this._w = 0;\n        this._h = 0;\n        if (!this._nativeCtxTexture) {\n            return;\n        }\n        this.gl.deleteTexture(this._nativeCtxTexture);\n        this._nativeCtxTexture = null;\n    }\n    createNativeCtxTexture() {\n        const nativeTexture = this.gl.createTexture();\n        if (!nativeTexture) {\n            throw new Error('Could not create WebGL Texture');\n        }\n        return nativeTexture;\n    }\n}\n//# sourceMappingURL=WebGlCoreCtxTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter } from '../../common/EventEmitter.js';\n/**\n * Represents a source of texture data for a CoreContextTexture.\n *\n * @remarks\n * Texture sources are used to populate a CoreContextTexture when that texture\n * is loaded. Texture data retrieved by the CoreContextTexture by the\n * `getTextureData` method. It's the responsibility of the concerete `Texture`\n * subclass to implement this method appropriately.\n */\nexport class Texture extends EventEmitter {\n    txManager;\n    /**\n     * The dimensions of the texture\n     *\n     * @remarks\n     * Until the texture data is loaded for the first time the value will be\n     * `null`.\n     */\n    dimensions = null;\n    error = null;\n    state = 'loading';\n    constructor(txManager) {\n        super();\n        this.txManager = txManager;\n    }\n    /**\n     * Set the state of the texture\n     *\n     * @remark\n     * Intended for internal-use only but declared public so that it can be set\n     * by it's associated {@link CoreContextTexture}\n     *\n     * @param state\n     * @param args\n     */\n    setState(state, ...args) {\n        if (this.state !== state) {\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n            this.state = state;\n            if (state === 'loaded') {\n                const loadedArgs = args;\n                this.dimensions = loadedArgs[0];\n            }\n            else if (state === 'failed') {\n                const failedArgs = args;\n                this.error = failedArgs[0];\n            }\n            this.emit(state, ...args);\n        }\n    }\n    /**\n     * Make a cache key for this texture.\n     *\n     * @remarks\n     * Each concrete `Texture` subclass must implement this method to provide an\n     * appropriate cache key for the texture type including the texture's\n     * properties that uniquely identify a copy of the texture. If the texture\n     * type does not support caching, then this method should return `false`.\n     *\n     * @param props\n     * @returns\n     * A cache key for this texture or `false` if the texture type does not\n     * support caching.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    static makeCacheKey(props) {\n        return false;\n    }\n    /**\n     * Resolve the default values for the texture's properties.\n     *\n     * @remarks\n     * Each concrete `Texture` subclass must implement this method to provide\n     * default values for the texture's optional properties.\n     *\n     * @param props\n     * @returns\n     * The default values for the texture's properties.\n     */\n    static resolveDefaults(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    props) {\n        return {};\n    }\n}\n//# sourceMappingURL=Texture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture } from './Texture.js';\n/**\n * Texture consisting of only a 1x1 color pixel\n *\n * @remarks\n * The pixel color is set with the {@link ColorTextureProps.color} prop.\n *\n * This is the default texture used for a Node if it's\n * {@link INodeWritableProps.texture} prop is set to `null` (the default)\n *\n * Generally the 1x1 color pixel is stretched to whatever the set dimensions of\n * a Node are.\n */\nexport class ColorTexture extends Texture {\n    props;\n    constructor(txManager, props) {\n        super(txManager);\n        this.props = ColorTexture.resolveDefaults(props || {});\n    }\n    get color() {\n        return this.props.color;\n    }\n    set color(color) {\n        this.props.color = color;\n    }\n    async getTextureData() {\n        const pixelData32 = new Uint32Array([this.color]);\n        const pixelData8 = new Uint8ClampedArray(pixelData32.buffer);\n        return {\n            data: new ImageData(pixelData8, 1, 1),\n            premultiplyAlpha: true,\n        };\n    }\n    static makeCacheKey(props) {\n        const resolvedProps = ColorTexture.resolveDefaults(props);\n        return `ColorTexture,${resolvedProps.color}`;\n    }\n    static resolveDefaults(props) {\n        return {\n            color: props.color || 0xffffffff,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=ColorTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture, } from './Texture.js';\n/**\n * A Texture that is a sub-region of another Texture.\n *\n * @remarks\n * The parent texture can be a Sprite Sheet/Texture Atlas and set using the\n * {@link SubTextureProps.texture} prop. The sub-region relative to the parent\n * texture is defined with the {@link SubTextureProps.x},\n * {@link SubTextureProps.y}, {@link SubTextureProps.width}, and\n * {@link SubTextureProps.height} pixel values.\n */\nexport class SubTexture extends Texture {\n    props;\n    parentTexture;\n    constructor(txManager, props) {\n        super(txManager);\n        this.parentTexture = this.txManager.loadTexture(props.texture.txType, props.texture.props, props.texture.options);\n        this.props = SubTexture.resolveDefaults(props || {});\n        // If parent texture is already loaded / failed, trigger loaded event manually\n        // so that users get a consistent event experience.\n        // We do this in a microtask to allow listeners to be attached in the same\n        // synchronous task after calling loadTexture()\n        queueMicrotask(() => {\n            const parentTx = this.parentTexture;\n            if (parentTx.state === 'loaded') {\n                this.onParentTxLoaded(parentTx, parentTx.dimensions);\n            }\n            else if (parentTx.state === 'failed') {\n                this.onParentTxFailed(parentTx, parentTx.error);\n            }\n            parentTx.on('loaded', this.onParentTxLoaded);\n            parentTx.on('failed', this.onParentTxFailed);\n        });\n    }\n    onParentTxLoaded = () => {\n        // We ignore the parent's passed dimensions, and simply use the SubTexture's\n        // configured dimensions (because that's all that matters here)\n        this.setState('loaded', {\n            width: this.props.width,\n            height: this.props.height,\n        });\n    };\n    onParentTxFailed = (target, error) => {\n        this.setState('failed', error);\n    };\n    async getTextureData() {\n        return {\n            data: this.props,\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    static makeCacheKey(props) {\n        return false;\n    }\n    static resolveDefaults(props) {\n        return {\n            texture: props.texture,\n            x: props.x || 0,\n            y: props.y || 0,\n            width: props.width || 0,\n            height: props.height || 0,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=SubTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { WebGlCoreCtxTexture } from './WebGlCoreCtxTexture.js';\nexport class WebGlCoreCtxSubTexture extends WebGlCoreCtxTexture {\n    constructor(gl, textureSource) {\n        super(gl, textureSource);\n    }\n    async onLoadRequest() {\n        const props = await this.textureSource.getTextureData();\n        return {\n            width: props.data?.width || 0,\n            height: props.data?.height || 0,\n        };\n    }\n}\n//# sourceMappingURL=WebGlCoreCtxSubTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a collection of WebGL Buffers along with their associated\n * vertex attribute formats.\n */\nexport class BufferCollection {\n    config;\n    constructor(config) {\n        this.config = config;\n    }\n    /**\n     * Get the WebGLBuffer associated with the given attribute name if it exists.\n     *\n     * @param attributeName\n     * @returns\n     */\n    getBuffer(attributeName) {\n        return this.config.find((item) => item.attributes[attributeName])?.buffer;\n    }\n    /**\n     * Get the AttributeInfo associated with the given attribute name if it exists.\n     *\n     * @param attributeName\n     * @returns\n     */\n    getAttributeInfo(attributeName) {\n        return this.config.find((item) => item.attributes[attributeName])\n            ?.attributes[attributeName];\n    }\n}\n//# sourceMappingURL=BufferCollection.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy, createWebGLContext, hasOwn, mergeColorAlphaPremultiplied, } from '../../../utils.js';\nimport { CoreRenderer } from '../CoreRenderer.js';\nimport { WebGlCoreRenderOp } from './WebGlCoreRenderOp.js';\nimport { createIndexBuffer, getWebGlParameters, getWebGlExtensions, } from './internal/RendererUtils.js';\nimport { WebGlCoreCtxTexture } from './WebGlCoreCtxTexture.js';\nimport { Texture } from '../../textures/Texture.js';\nimport { ColorTexture } from '../../textures/ColorTexture.js';\nimport { SubTexture } from '../../textures/SubTexture.js';\nimport { WebGlCoreCtxSubTexture } from './WebGlCoreCtxSubTexture.js';\nimport { CoreShaderManager } from '../../CoreShaderManager.js';\nimport { BufferCollection } from './internal/BufferCollection.js';\nimport { compareRect, getNormalizedRgbaComponents, } from '../../lib/utils.js';\nimport { WebGlCoreShader } from './WebGlCoreShader.js';\nimport { RoundedRectangle } from './shaders/RoundedRectangle.js';\nconst WORDS_PER_QUAD = 24;\nconst BYTES_PER_QUAD = WORDS_PER_QUAD * 4;\nexport class WebGlCoreRenderer extends CoreRenderer {\n    //// WebGL Native Context and Data\n    gl;\n    system;\n    //// Core Managers\n    txManager;\n    shManager;\n    //// Options\n    options;\n    //// Persistent data\n    quadBuffer = new ArrayBuffer(1024 * 1024 * 4);\n    fQuadBuffer = new Float32Array(this.quadBuffer);\n    uiQuadBuffer = new Uint32Array(this.quadBuffer);\n    renderOps = [];\n    //// Render Op / Buffer Filling State\n    curBufferIdx = 0;\n    curRenderOp = null;\n    renderables = [];\n    //// Default Shader\n    defaultShader;\n    quadBufferCollection;\n    /**\n     * White pixel texture used by default when no texture is specified.\n     */\n    defaultTexture;\n    constructor(options) {\n        super(options.stage);\n        const { canvas, clearColor, bufferMemory } = options;\n        this.options = options;\n        this.txManager = options.txManager;\n        this.shManager = options.shManager;\n        this.defaultTexture = new ColorTexture(this.txManager);\n        const gl = createWebGLContext(canvas);\n        if (!gl) {\n            throw new Error('Unable to create WebGL context');\n        }\n        this.gl = gl;\n        const color = getNormalizedRgbaComponents(clearColor);\n        gl.viewport(0, 0, canvas.width, canvas.height);\n        gl.clearColor(color[0], color[1], color[2], color[3]);\n        createIndexBuffer(gl, bufferMemory);\n        this.system = {\n            parameters: getWebGlParameters(gl),\n            extensions: getWebGlExtensions(gl),\n        };\n        this.shManager.renderer = this;\n        this.defaultShader = this.shManager.loadShader('DefaultShader').shader;\n        const quadBuffer = gl.createBuffer();\n        assertTruthy(quadBuffer);\n        const stride = 6 * Float32Array.BYTES_PER_ELEMENT;\n        this.quadBufferCollection = new BufferCollection([\n            {\n                buffer: quadBuffer,\n                attributes: {\n                    a_position: {\n                        name: 'a_position',\n                        size: 2,\n                        type: gl.FLOAT,\n                        normalized: false,\n                        stride,\n                        offset: 0, // start at the beginning of the buffer\n                    },\n                    a_textureCoordinate: {\n                        name: 'a_textureCoordinate',\n                        size: 2,\n                        type: gl.FLOAT,\n                        normalized: false,\n                        stride,\n                        offset: 2 * Float32Array.BYTES_PER_ELEMENT,\n                    },\n                    a_color: {\n                        name: 'a_color',\n                        size: 4,\n                        type: gl.UNSIGNED_BYTE,\n                        normalized: true,\n                        stride,\n                        offset: 4 * Float32Array.BYTES_PER_ELEMENT,\n                    },\n                    a_textureIndex: {\n                        name: 'a_textureIndex',\n                        size: 1,\n                        type: gl.FLOAT,\n                        normalized: false,\n                        stride,\n                        offset: 5 * Float32Array.BYTES_PER_ELEMENT,\n                    },\n                },\n            },\n        ]);\n    }\n    reset() {\n        this.curBufferIdx = 0;\n        this.curRenderOp = null;\n        this.renderOps.length = 0;\n        this.gl.disable(this.gl.SCISSOR_TEST);\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n    }\n    getShaderManager() {\n        return this.shManager;\n    }\n    createCtxTexture(textureSource) {\n        if (textureSource instanceof SubTexture) {\n            return new WebGlCoreCtxSubTexture(this.gl, textureSource);\n        }\n        return new WebGlCoreCtxTexture(this.gl, textureSource);\n    }\n    /**\n     * This function adds a quad (a rectangle composed of two triangles) to the WebGL rendering pipeline.\n     *\n     * It takes a set of options that define the quad's properties, such as its dimensions, colors, texture, shader, and transformation matrix.\n     * The function first updates the shader properties with the current dimensions if necessary, then sets the default texture if none is provided.\n     * It then checks if a new render operation is needed, based on the current shader and clipping rectangle.\n     * If a new render operation is needed, it creates one and updates the current render operation.\n     * The function then adjusts the texture coordinates based on the texture options and adds the texture to the texture manager.\n     *\n     * Finally, it calculates the vertices for the quad, taking into account any transformations, and adds them to the quad buffer.\n     * The function updates the length and number of quads in the current render operation, and updates the current buffer index.\n     */\n    addQuad(params) {\n        const { fQuadBuffer, uiQuadBuffer } = this;\n        const { width, height, colorTl, colorTr, colorBl, colorBr, textureOptions, shader, shaderProps, alpha, clippingRect, tx, ty, ta, tb, tc, td, } = params;\n        let { texture } = params;\n        /**\n         * If the shader props contain any automatic properties, update it with the\n         * current dimensions that will be used to render the quad.\n         */\n        if (shaderProps && hasOwn(shaderProps, '$dimensions')) {\n            const dimensions = shaderProps.$dimensions;\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            dimensions.width = width;\n            dimensions.height = height;\n        }\n        texture = texture ?? this.defaultTexture;\n        assertTruthy(texture instanceof Texture, 'Invalid texture type');\n        let { curBufferIdx: bufferIdx, curRenderOp } = this;\n        const targetDims = {\n            width,\n            height,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        };\n        const targetShader = shader || this.defaultShader;\n        assertTruthy(targetShader instanceof WebGlCoreShader);\n        if (curRenderOp) {\n            // If the current render op is not the same shader, create a new one\n            // If the current render op's shader props are not compatible with the\n            // the new shader props, create a new one render op.\n            if (curRenderOp.shader !== targetShader ||\n                !compareRect(curRenderOp.clippingRect, clippingRect) ||\n                (curRenderOp.shader !== this.defaultShader &&\n                    (!shaderProps ||\n                        !curRenderOp.shader.canBatchShaderProps(curRenderOp.shaderProps, shaderProps)))) {\n                curRenderOp = null;\n            }\n        }\n        assertTruthy(targetShader instanceof WebGlCoreShader);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-explicit-any\n        if (!curRenderOp) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            this.newRenderOp(targetShader, shaderProps, alpha, targetDims, clippingRect, bufferIdx);\n            curRenderOp = this.curRenderOp;\n            assertTruthy(curRenderOp);\n        }\n        const flipX = textureOptions?.flipX ?? false;\n        const flipY = textureOptions?.flipY ?? false;\n        let texCoordX1 = 0;\n        let texCoordY1 = 0;\n        let texCoordX2 = 1;\n        let texCoordY2 = 1;\n        if (texture instanceof SubTexture) {\n            const { x: tx, y: ty, width: tw, height: th } = texture.props;\n            const { width: parentW = 0, height: parentH = 0 } = texture.parentTexture\n                .dimensions || { width: 0, height: 0 };\n            texCoordX1 = tx / parentW;\n            texCoordX2 = texCoordX1 + tw / parentW;\n            texCoordY1 = ty / parentH;\n            texCoordY2 = texCoordY1 + th / parentH;\n            texture = texture.parentTexture;\n        }\n        // Flip texture coordinates if dictated by texture options\n        if (flipX) {\n            [texCoordX1, texCoordX2] = [texCoordX2, texCoordX1];\n        }\n        if (flipY) {\n            [texCoordY1, texCoordY2] = [texCoordY2, texCoordY1];\n        }\n        const { txManager } = this.stage;\n        const ctxTexture = txManager.getCtxTexture(texture);\n        assertTruthy(ctxTexture instanceof WebGlCoreCtxTexture);\n        const textureIdx = this.addTexture(ctxTexture, bufferIdx);\n        curRenderOp = this.curRenderOp;\n        assertTruthy(curRenderOp);\n        // render quad advanced\n        if (tb !== 0 || tc !== 0) {\n            // Upper-Left\n            fQuadBuffer[bufferIdx++] = tx; // vertexX\n            fQuadBuffer[bufferIdx++] = ty; // vertexY\n            fQuadBuffer[bufferIdx++] = texCoordX1; // texCoordX\n            fQuadBuffer[bufferIdx++] = texCoordY1; // texCoordY\n            uiQuadBuffer[bufferIdx++] = colorTl; // color\n            fQuadBuffer[bufferIdx++] = textureIdx; // texIndex\n            // Upper-Right\n            fQuadBuffer[bufferIdx++] = tx + width * ta;\n            fQuadBuffer[bufferIdx++] = ty + width * tc;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY1;\n            uiQuadBuffer[bufferIdx++] = colorTr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Left\n            fQuadBuffer[bufferIdx++] = tx + height * tb;\n            fQuadBuffer[bufferIdx++] = ty + height * td;\n            fQuadBuffer[bufferIdx++] = texCoordX1;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = colorBl;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Right\n            fQuadBuffer[bufferIdx++] = tx + width * ta + height * tb;\n            fQuadBuffer[bufferIdx++] = ty + width * tc + height * td;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = colorBr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n        }\n        else {\n            // Calculate the right corner of the quad\n            // multiplied by the scale\n            const rightCornerX = tx + width * ta;\n            const rightCornerY = ty + height * td;\n            // Upper-Left\n            fQuadBuffer[bufferIdx++] = tx; // vertexX\n            fQuadBuffer[bufferIdx++] = ty; // vertexY\n            fQuadBuffer[bufferIdx++] = texCoordX1; // texCoordX\n            fQuadBuffer[bufferIdx++] = texCoordY1; // texCoordY\n            uiQuadBuffer[bufferIdx++] = colorTl; // color\n            fQuadBuffer[bufferIdx++] = textureIdx; // texIndex\n            // Upper-Right\n            fQuadBuffer[bufferIdx++] = rightCornerX;\n            fQuadBuffer[bufferIdx++] = ty;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY1;\n            uiQuadBuffer[bufferIdx++] = colorTr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Left\n            fQuadBuffer[bufferIdx++] = tx;\n            fQuadBuffer[bufferIdx++] = rightCornerY;\n            fQuadBuffer[bufferIdx++] = texCoordX1;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = colorBl;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Right\n            fQuadBuffer[bufferIdx++] = rightCornerX;\n            fQuadBuffer[bufferIdx++] = rightCornerY;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = colorBr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n        }\n        // Update the length of the current render op\n        curRenderOp.length += WORDS_PER_QUAD;\n        curRenderOp.numQuads++;\n        this.curBufferIdx = bufferIdx;\n    }\n    /**\n     * Replace the existing RenderOp with a new one that uses the specified Shader\n     * and starts at the specified buffer index.\n     *\n     * @param shader\n     * @param bufferIdx\n     */\n    newRenderOp(shader, shaderProps, alpha, dimensions, clippingRect, bufferIdx) {\n        const curRenderOp = new WebGlCoreRenderOp(this.gl, this.options, this.quadBufferCollection, shader, shaderProps, alpha, clippingRect, dimensions, bufferIdx, 0);\n        this.curRenderOp = curRenderOp;\n        this.renderOps.push(curRenderOp);\n    }\n    /**\n     * Add a texture to the current RenderOp. If the texture cannot be added to the\n     * current RenderOp, a new RenderOp will be created and the texture will be added\n     * to that one.\n     *\n     * If the texture cannot be added to the new RenderOp, an error will be thrown.\n     *\n     * @param texture\n     * @param bufferIdx\n     * @param recursive\n     * @returns Assigned Texture Index of the texture in the render op\n     */\n    addTexture(texture, bufferIdx, recursive) {\n        const { curRenderOp } = this;\n        assertTruthy(curRenderOp);\n        const textureIdx = curRenderOp.addTexture(texture);\n        // TODO: Refactor to be more DRY\n        if (textureIdx === 0xffffffff) {\n            if (recursive) {\n                throw new Error('Unable to add texture to render op');\n            }\n            const { shader, shaderProps, dimensions, clippingRect, alpha } = curRenderOp;\n            this.newRenderOp(shader, shaderProps, alpha, dimensions, clippingRect, bufferIdx);\n            return this.addTexture(texture, bufferIdx, true);\n        }\n        return textureIdx;\n    }\n    /**\n     * add RenderOp to the render pipeline\n     */\n    addRenderOp(renderable) {\n        this.renderOps.push(renderable);\n        this.curRenderOp = null;\n    }\n    /**\n     * Render the current set of RenderOps to render to the specified surface.\n     *\n     * TODO: 'screen' is the only supported surface at the moment.\n     *\n     * @param surface\n     */\n    render(surface = 'screen') {\n        const { gl, quadBuffer } = this;\n        const arr = new Float32Array(quadBuffer, 0, this.curBufferIdx);\n        const buffer = this.quadBufferCollection.getBuffer('a_position') ?? null;\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, arr, gl.DYNAMIC_DRAW);\n        const doLog = false; // idx++ % 100 === 0;\n        if (doLog) {\n            console.log('renderOps', this.renderOps.length);\n        }\n        this.renderOps.forEach((renderOp, i) => {\n            if (doLog) {\n                console.log('renderOp', i, renderOp.numQuads);\n            }\n            renderOp.draw();\n        });\n        // clean up\n        this.renderables = [];\n    }\n}\nconst idx = 0;\n//# sourceMappingURL=WebGlCoreRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter } from '../../../common/EventEmitter.js';\nexport class TrFontFace extends EventEmitter {\n    fontFamily;\n    descriptors;\n    loaded = false;\n    constructor(fontFamily, descriptors) {\n        super();\n        this.fontFamily = fontFamily;\n        this.descriptors = {\n            style: 'normal',\n            weight: 'normal',\n            stretch: 'normal',\n            ...descriptors,\n        };\n    }\n    /**\n     * Convert a TrFontFaceDescriptors to a FontFaceDescriptors which differ slightly\n     *\n     * @param descriptors\n     * @returns\n     */\n    static convertToCssFontFaceDescriptors(descriptors) {\n        return {\n            style: descriptors.style,\n            weight: typeof descriptors.weight === 'number'\n                ? `${descriptors.weight}`\n                : descriptors.weight,\n            stretch: descriptors.stretch,\n            unicodeRange: descriptors.unicodeRange,\n            variant: descriptors.variant,\n            featureSettings: descriptors.featureSettings,\n            display: descriptors.display,\n        };\n    }\n}\n//# sourceMappingURL=TrFontFace.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const SpecialCodepoints = {\n    LINE_FEED: 0x0a,\n    CARRIAGE_RETURN: 0x0d,\n    SPACE: 0x20,\n    TAB: 0x09,\n    ZERO_WIDTH_SPACE: 0x200b,\n    ZERO_WIDTH_NON_JOINER: 0x200c,\n    ZERO_WIDTH_JOINER: 0x200d,\n    LEFT_TO_RIGHT_MARK: 0x200e,\n    RIGHT_TO_LEFT_MARK: 0x200f,\n    LEFT_TO_RIGHT_EMBEDDING: 0x202a,\n    RIGHT_TO_LEFT_EMBEDDING: 0x202b,\n    POP_DIRECTIONAL_FORMATTING: 0x202c,\n    LEFT_TO_RIGHT_OVERRIDE: 0x202d,\n    RIGHT_TO_LEFT_OVERRIDE: 0x202e,\n    LINE_SEPARATOR: 0x2028,\n    PARAGRAPH_SEPARATOR: 0x2029,\n    OBJECT_REPLACEMENT_CHARACTER: 0xfffc,\n    REPLACEMENT_CHARACTER: 0xfffd,\n    ZERO_WIDTH_NO_BREAK_SPACE: 0xfeff,\n    LEFT_TO_RIGHT_ISOLATE: 0x2066,\n    RIGHT_TO_LEFT_ISOLATE: 0x2067,\n    FIRST_STRONG_ISOLATE: 0x2068,\n    POP_DIRECTIONAL_ISOLATE: 0x2069,\n    INHIBIT_SYMMETRIC_SWAPPING: 0x206a,\n    ACTIVATE_SYMMETRIC_SWAPPING: 0x206b,\n    INHIBIT_ARABIC_FORM_SHAPING: 0x206c,\n    ACTIVATE_ARABIC_FORM_SHAPING: 0x206d,\n    NATIONAL_DIGIT_SHAPES: 0x206e,\n    NOMINAL_DIGIT_SHAPES: 0x206f,\n    LEFT_TO_RIGHT_BOUNDARY: 0x200e,\n    RIGHT_TO_LEFT_BOUNDARY: 0x200f,\n};\n//# sourceMappingURL=SpecialCodepoints.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SpecialCodepoints } from '../../../renderers/SdfTextRenderer/internal/SpecialCodepoints.js';\nimport { FontShaper, } from './FontShaper.js';\nexport class SdfFontShaper extends FontShaper {\n    data;\n    kernings;\n    constructor(data) {\n        super();\n        this.data = data;\n        const kernings = (this.kernings = {});\n        data.kernings.forEach((kerning) => {\n            const second = kerning.second;\n            const firsts = (kernings[second] = kernings[second] || {});\n            firsts[kerning.first] = kerning.amount;\n        });\n        this.kernings = kernings;\n    }\n    *shapeText(props, codepoints) {\n        let codepointResult;\n        let lastGlyphId = undefined;\n        while ((codepointResult = codepoints.peek()) && !codepointResult.done) {\n            const codepoint = codepointResult.value;\n            const glyph = this.data.chars.find((char) => char.id === codepoint);\n            codepoints.next();\n            if (glyph !== undefined) {\n                // We found a glyph for this codepoint\n                // Yield the mapped glyph info\n                /**\n                 * Kerning includes any possible additional letter spacing\n                 */\n                const kerning = lastGlyphId !== undefined\n                    ? (this.kernings[glyph.id]?.[lastGlyphId] || 0) +\n                        props.letterSpacing\n                    : 0;\n                lastGlyphId = glyph.id;\n                yield {\n                    mapped: true,\n                    glyphId: glyph.id,\n                    codepoint,\n                    cluster: codepoints.lastIndex,\n                    xAdvance: glyph.xadvance + kerning,\n                    yAdvance: 0,\n                    xOffset: glyph.xoffset + kerning,\n                    yOffset: glyph.yoffset,\n                    xBearing: 0,\n                    yBearing: 0,\n                    width: glyph.width,\n                    height: glyph.height,\n                };\n            }\n            else {\n                // We didn't find a glyph for this codepoint\n                // Yield the unmapped codepoint info\n                // If this codepoint is a linebreak, we should reset the last glyph id\n                // so that the next glyph will not be kerned with the last glyph of the\n                // previous line.\n                if (codepoint === SpecialCodepoints.LINE_FEED) {\n                    lastGlyphId = undefined;\n                }\n                yield {\n                    mapped: false,\n                    codepoint,\n                    cluster: codepoints.lastIndex,\n                };\n            }\n        }\n    }\n}\n//# sourceMappingURL=SdfFontShaper.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class FontShaper {\n}\n//# sourceMappingURL=FontShaper.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// import type { Renderer } from '../../../Renderer';\nimport { assertTruthy } from '../../../../utils.js';\nimport { WebGlCoreRenderer } from '../../../renderers/webgl/WebGlCoreRenderer.js';\nimport { ImageTexture } from '../../../textures/ImageTexture.js';\nimport { TrFontFace } from '../TrFontFace.js';\nimport { SdfFontShaper } from './internal/SdfFontShaper.js';\nexport class SdfTrFontFace extends TrFontFace {\n    type;\n    texture;\n    data;\n    shaper;\n    glyphMap = new Map();\n    constructor(fontFamily, descriptors, type, stage, atlasUrl, atlasDataUrl) {\n        super(fontFamily, descriptors);\n        this.type = type;\n        const renderer = stage.renderer;\n        assertTruthy(renderer instanceof WebGlCoreRenderer, 'SDF Font Faces can only be used with the WebGL Renderer');\n        this.texture = stage.txManager.loadTexture('ImageTexture', {\n            src: atlasUrl,\n            // IMPORTANT: The SDF shader requires the alpha channel to NOT be\n            // premultiplied on the atlas texture. If it is premultiplied, the\n            // rendering of SDF glyphs (especially single-channel SDF fonts) will\n            // be very jagged.\n            premultiplyAlpha: false,\n        }, {\n            preload: true,\n        });\n        this.texture.on('loaded', () => {\n            this.checkLoaded();\n        });\n        // Set this.data to the fetched data from dataUrl\n        fetch(atlasDataUrl)\n            .then(async (response) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            this.data = await response.json();\n            // We know `data` is defined here, because we just set it\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.shaper = new SdfFontShaper(this.data);\n            // Add all the glyphs to the glyph map\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.data.chars.forEach((glyph) => {\n                this.glyphMap.set(glyph.id, glyph);\n            });\n            this.checkLoaded();\n        })\n            .catch(console.error);\n    }\n    getAtlasEntry(glyphId) {\n        const glyph = this.glyphMap.get(glyphId);\n        if (glyph === undefined) {\n            throw new Error(`Glyph ${glyphId} not found in font ${this.fontFamily}`);\n        }\n        return {\n            x: glyph.x,\n            y: glyph.y,\n            width: glyph.width,\n            height: glyph.height,\n        };\n    }\n    checkLoaded() {\n        if (this.loaded)\n            return;\n        if (this.texture.state === 'loaded' && this.data) {\n            this.loaded = true;\n            this.emit('loaded');\n        }\n    }\n}\n//# sourceMappingURL=SdfTrFontFace.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TrFontFace } from './TrFontFace.js';\nexport class WebTrFontFace extends TrFontFace {\n    fontFace;\n    fontUrl;\n    constructor(fontFamily, descriptors, fontUrl) {\n        super(fontFamily, descriptors);\n        // Filter out parentheses from fontUrl\n        const fontUrlWithoutParentheses = fontUrl.replace(/\\(|\\)/g, '');\n        // Defaults for descriptors resolved in the super constructor\n        const determinedDescriptors = this.descriptors;\n        // Convert TrFontFaceDescriptors to CSS FontFaceDescriptors\n        const cssDescriptors = {\n            style: determinedDescriptors.style,\n            weight: typeof determinedDescriptors.weight === 'number'\n                ? `${determinedDescriptors.weight}`\n                : determinedDescriptors.weight,\n            stretch: determinedDescriptors.stretch,\n            unicodeRange: determinedDescriptors.unicodeRange,\n            variant: determinedDescriptors.variant,\n            featureSettings: determinedDescriptors.featureSettings,\n            display: determinedDescriptors.display,\n        };\n        const fontFace = new FontFace(fontFamily, `url(${fontUrlWithoutParentheses})`, cssDescriptors);\n        fontFace\n            .load()\n            .then(() => {\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n            this.loaded = true;\n            this.emit('loaded');\n        })\n            .catch(console.error);\n        this.fontFace = fontFace;\n        this.fontUrl = fontUrl;\n    }\n}\n//# sourceMappingURL=WebTrFontFace.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Base class for Core extensions.\n *\n * @remarks\n * Core extensions are used to extend the Core Renderer with custom code such as\n * custom fonts, custom shaders, custom textures, custom animation functions,\n * and more.\n */\nexport class CoreExtension {\n}\n//# sourceMappingURL=CoreExtension.js.map"],"names":["assertTruthy","condition","message","Error","hasOwn","obj","prop","Object","prototype","hasOwnProperty","call","rgba","alpha","flipEndianess","arguments","length","undefined","newAlpha","r","Math","trunc","g","b","a","bound","x1","x2","y1","y2","x","max","y","width","min","height","out","intersection","createBound","rgba1","rgba2","p","r1","g1","b1","a1","r2","g2","b2","a2","round","color","floor","concat","toFixed","EventEmitter","_classCallCheck","this","_defineProperty","_createClass","key","value","event","listener","listeners","eventListeners","push","index","indexOf","splice","_this","on","onceListener","target","data","off","_this2","_toConsumableArray","forEach","exports","isPowerOfTwo","getTimingBezier","c","d","xc","xb","xa","yc","yb","ya","time","cbxd","dx","t","it","minT","maxT","str","s","parts","substr","split","console","warn","parseFloat","isNaN","hypot","_len","args","Array","_key","i","sqrt","getNormalizedRgbaComponents","CoreContextTexture","textureSource","CoreRenderer","stage","CoreRenderOp","createShader","gl","type","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","log","getShaderInfoLog","deleteShader","isWebGl2","self","WebGL2RenderingContext","WebGlCoreShader","_CoreShader","_inherits","_super","_createSuper","options","_this3","_assertThisInitialized","renderer","supportsIndexedTextures","webGl2","requiredExtensions","webgl2Extensions","webgl1Extensions","glVersion","extensionName","getExtension","constructor","name","shaderSources","fragment","vertex","textureUnits","system","parameters","MAX_VERTEX_TEXTURE_IMAGE_UNITS","vertexSource","Function","fragmentSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","vao","createVertexArray","bindVertexArray","attributeLocations","attributeBuffers","attributeNames","attributes","attributeName","location","getAttribLocation","buffer","createBuffer","uniformLocations","uniformTypes","uniforms","uniform","getUniformLocation","attribute","enableVertexAttribArray","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","size","normalized","stride","offset","disableVertexAttribArray","loc","disableAttribute","boundBufferCollection","propsA","propsB","renderOp","props","bindBufferCollection","buffers","textures","bindTextures","setUniform","canvas","pixelRatio","dimensions","$dimensions","$alpha","bindProps","_this$gl","_len2","_key2","apply","resolvedBuffer","getBuffer","resolvedInfo","getAttributeInfo","bindBufferAttribute","useProgram","disableAttributes","CoreShader","WebGlCoreRenderOp","_CoreRenderOp","_super2","shaderProps","clippingRect","bufferIdx","zIndex","_this4","maxTextures","getParameter","texture","existingIdx","findIndex","newIdx","shManager","useShader","bindRenderOp","quadIdx","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","_this$clippingRect","canvasHeight","clipX","clipWidth","clipHeight","clipY","SCISSOR_TEST","scissor","disable","drawElements","TRIANGLES","numQuads","UNSIGNED_SHORT","getWebGlParameters","params","MAX_RENDERBUFFER_SIZE","MAX_TEXTURE_SIZE","MAX_VIEWPORT_DIMS","MAX_TEXTURE_IMAGE_UNITS","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_VERTEX_ATTRIBS","MAX_VARYING_VECTORS","MAX_VERTEX_UNIFORM_VECTORS","MAX_FRAGMENT_UNIFORM_VECTORS","keys","getWebGlExtensions","extensions","ANGLE_instanced_arrays","WEBGL_compressed_texture_s3tc","WEBGL_compressed_texture_astc","WEBGL_compressed_texture_etc","WEBGL_compressed_texture_etc1","WEBGL_compressed_texture_pvrtc","WEBKIT_WEBGL_compressed_texture_pvrtc","WEBGL_compressed_texture_s3tc_srgb","OES_vertex_array_object","TRANSPARENT_TEXTURE_DATA","Uint8Array","WebGlCoreCtxTexture","_CoreContextTexture","_super3","_onLoadRequest","_this5","get","_state","load","_nativeCtxTexture","_w","_h","_this6","setState","onLoadRequest","then","_ref","catch","err","error","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$textureSource","textureData","wrap","_context","prev","next","createNativeCtxTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","RGBA","UNSIGNED_BYTE","getTextureData","sent","ImageBitmap","ImageData","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","premultiplyAlpha","generateMipmap","abrupt","stop","deleteTexture","nativeTexture","createTexture","Texture","_EventEmitter","_super4","txManager","_this7","state","_len3","_key3","loadedArgs","failedArgs","emit","ColorTexture","_Texture","_getTextureData","_super5","_this8","resolveDefaults","set","_callee2","pixelData32","pixelData8","_callee2$","_context2","Uint32Array","Uint8ClampedArray","resolvedProps","SubTexture","_Texture2","_super6","_getTextureData2","_this9","parentTexture","loadTexture","txType","queueMicrotask","parentTx","onParentTxLoaded","onParentTxFailed","_callee3","_callee3$","_context3","WebGlCoreCtxSubTexture","_WebGlCoreCtxTexture","_super7","_onLoadRequest2","_callee4","_props$data","_props$data2","_callee4$","_context4","BufferCollection","config","_this$config$find","find","item","_this$config$find2","WebGlCoreRenderer","_CoreRenderer","_super8","_this10","ArrayBuffer","Float32Array","quadBuffer","clearColor","bufferMemory","defaultTexture","antialias","depth","stencil","desynchronized","powerPreference","premultipliedAlpha","preserveDrawingBuffer","getContext","createWebGLContext","viewport","maxQuads","indices","Uint16Array","j","ELEMENT_ARRAY_BUFFER","bufferData","STATIC_DRAW","createIndexBuffer","defaultShader","loadShader","BYTES_PER_ELEMENT","quadBufferCollection","a_position","FLOAT","a_textureCoordinate","a_color","a_textureIndex","curBufferIdx","curRenderOp","renderOps","clear","COLOR_BUFFER_BIT","_texture","_textureOptions$flipX","_textureOptions$flipY","fQuadBuffer","uiQuadBuffer","colorTl","colorTr","colorBl","colorBr","textureOptions","tx","ty","ta","tb","tc","td","targetDims","targetShader","canBatchShaderProps","newRenderOp","flipX","flipY","texCoordX1","texCoordY1","texCoordX2","texCoordY2","_texture$props","tw","th","_ref2","_ref2$width","parentW","_ref2$height","parentH","_ref3","_ref4","ctxTexture","getCtxTexture","textureIdx","addTexture","rightCornerX","rightCornerY","recursive","renderable","_this$quadBufferColle","arr","DYNAMIC_DRAW","draw","renderables","TrFontFace","_EventEmitter2","_super9","fontFamily","descriptors","_this11","_objectSpread","style","weight","stretch","unicodeRange","variant","featureSettings","display","SpecialCodepoints","SdfFontShaper","_FontShaper","_super10","_this12","kernings","kerning","second","first","amount","shapeText","codepoints","_this13","codepointResult","lastGlyphId","_loop","_context6","codepoint","glyph","_this13$kernings$glyp","_context5","chars","char","id","letterSpacing","mapped","glyphId","cluster","lastIndex","xAdvance","xadvance","yAdvance","xOffset","xoffset","yOffset","yoffset","xBearing","yBearing","peek","done","delegateYield","FontShaper","SdfTrFontFace","_TrFontFace","_super11","atlasUrl","atlasDataUrl","_this14","Map","src","preload","checkLoaded","fetch","_ref5","_callee5","response","_callee5$","_context7","json","shaper","glyphMap","_x","loaded","_TrFontFace2","WebTrFontFace","_super12","fontUrl","_this15","fontUrlWithoutParentheses","replace","determinedDescriptors","cssDescriptors","fontFace","FontFace","CoreExtension"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}