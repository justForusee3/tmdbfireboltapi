{"version":3,"file":"CoreExtension-3fd98810.js","sources":["../../node_modules/@lightningjs/renderer/dist/src/utils.js","../../node_modules/@lightningjs/renderer/dist/src/common/EventEmitter.js","../../node_modules/@lightningjs/renderer/dist/src/core/utils.js","../../node_modules/@lightningjs/renderer/dist/src/core/lib/utils.js","../../node_modules/@lightningjs/renderer/dist/src/core/renderers/CoreContextTexture.js","../../node_modules/@lightningjs/renderer/dist/src/core/renderers/CoreRenderer.js","../../node_modules/@lightningjs/renderer/dist/src/core/renderers/CoreRenderOp.js","../../node_modules/@lightningjs/renderer/dist/src/core/renderers/CoreShader.js","../../node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/internal/ShaderUtils.js","../../node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/internal/WebGlUtils.js","../../node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreShader.js","../../node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreRenderOp.js","../../node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/internal/RendererUtils.js","../../node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreCtxTexture.js","../../node_modules/@lightningjs/renderer/dist/src/core/textures/Texture.js","../../node_modules/@lightningjs/renderer/dist/src/core/textures/ColorTexture.js","../../node_modules/@lightningjs/renderer/dist/src/core/textures/SubTexture.js","../../node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreCtxSubTexture.js","../../node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/internal/BufferCollection.js","../../node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreRenderer.js","../../node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/TrFontFace.js","../../node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/SpecialCodepoints.js","../../node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/SdfTrFontFace/internal/FontShaper.js","../../node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/SdfTrFontFace/internal/SdfFontShaper.js","../../node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/SdfTrFontFace/SdfTrFontFace.js","../../node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/WebTrFontFace.js","../../node_modules/@lightningjs/renderer/dist/src/core/CoreExtension.js"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function createWebGLContext(canvas) {\n    const config = {\n        alpha: true,\n        antialias: false,\n        depth: false,\n        stencil: true,\n        desynchronized: false,\n        // Disabled because it prevents Visual Regression Tests from working\n        // failIfMajorPerformanceCaveat: true,\n        powerPreference: 'high-performance',\n        premultipliedAlpha: true,\n        preserveDrawingBuffer: false,\n    };\n    return (\n    // TODO: Remove this assertion once this issue is fixed in TypeScript\n    // https://github.com/microsoft/TypeScript/issues/53614\n    (canvas.getContext('webgl', config) ||\n        canvas.getContext('experimental-webgl', config)));\n}\n/**\n * Asserts a condition is truthy, otherwise throws an error\n *\n * @remarks\n * Useful at the top of functions to ensure certain conditions, arguments and\n * properties are set/met before continuing. When using this function,\n * TypeScript will narrow away falsy types from the condition.\n *\n * @param condition\n * @param message\n * @returns\n */\nexport function assertTruthy(condition, message) {\n    if (!condition) {\n        throw new Error(message || 'Assertion failed');\n    }\n}\n/**\n * Merges two colors based on a given progress value.\n *\n * This function takes two colors (c1 and c2) represented as 32-bit integers\n * in RGBA format and blends them based on the provided progress value (p).\n * The result is a new color that is a weighted combination of the input colors,\n * where the weight is determined by the progress value.\n *\n * @param {number} c1 - The first color in RGBA format (32-bit integer).\n * @param {number} c2 - The second color in RGBA format (32-bit integer).\n * @param {number} p - The progress value between 0 and 1.\n * @returns {number} The merged color as a 32-bit integer in RGBA format.\n */\nexport function mergeColorProgress(rgba1, rgba2, p) {\n    const r1 = Math.trunc(rgba1 >>> 24);\n    const g1 = Math.trunc((rgba1 >>> 16) & 0xff);\n    const b1 = Math.trunc((rgba1 >>> 8) & 0xff);\n    const a1 = Math.trunc(rgba1 & 0xff);\n    const r2 = Math.trunc(rgba2 >>> 24);\n    const g2 = Math.trunc((rgba2 >>> 16) & 0xff);\n    const b2 = Math.trunc((rgba2 >>> 8) & 0xff);\n    const a2 = Math.trunc(rgba2 & 0xff);\n    const r = Math.round(r2 * p + r1 * (1 - p));\n    const g = Math.round(g2 * p + g1 * (1 - p));\n    const b = Math.round(b2 * p + b1 * (1 - p));\n    const a = Math.round(a2 * p + a1 * (1 - p));\n    return ((r << 24) | (g << 16) | (b << 8) | a) >>> 0;\n}\n/**\n * Given an RGBA encoded number, returns back the RGBA number with it's alpha\n * component multiplied by the passed `alpha` parameter.\n *\n * @internalRemarks\n * This method does NOT premultiply the alpha into the color channels. If that\n * is required (for internal use only) use {@link mergeColorAlphaPremultiplied}\n * instead.\n *\n * @param rgba RGBA encoded number\n * @param alpha Normalized alpha value (Range: 0.0 - 1.0)\n * @returns\n */\nexport function mergeColorAlpha(rgba, alpha) {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = Math.trunc((rgba & 0xff) * alpha);\n    return ((r << 24) | (g << 16) | (b << 8) | a) >>> 0;\n}\n/**\n * Given an RGBA encoded number, returns back the RGBA number with it's alpha\n * component multiplied by the passed `alpha` parameter. Before returning, the\n * final alpha value is multiplied into the color channels.\n *\n * @remarks\n * If `flipEndianess` is set to true, the function will returned an ABGR encoded number\n * which is useful when the color value needs to be passed into a shader attribute.\n *\n * NOTE: This method returns a PREMULTIPLIED alpha color which is generally only useful\n * in the context of the internal rendering process. Use {@link mergeColorAlpha} if you\n * need to blend an alpha value into a color in the context of the Renderer's\n * main API.\n *\n * @internalRemarks\n * Do not expose this method in the main API because Renderer users should instead use\n * {@link mergeColorAlpha} to manipulate the alpha value of a color.\n *\n * @internal\n * @param rgba RGBA encoded number\n * @param alpha Normalized alpha value (Range: 0.0 - 1.0)\n * @param flipEndianess Flip the endianess. RGBA becomes encoded as ABGR (for inserting colors into shader attributes)\n * @returns\n */\nexport function mergeColorAlphaPremultiplied(rgba, alpha, flipEndianess = false) {\n    const newAlpha = ((rgba & 0xff) / 255) * alpha;\n    const r = Math.trunc((rgba >>> 24) * newAlpha);\n    const g = Math.trunc(((rgba >>> 16) & 0xff) * newAlpha);\n    const b = Math.trunc(((rgba >>> 8) & 0xff) * newAlpha);\n    const a = Math.trunc(newAlpha * 255);\n    if (flipEndianess) {\n        return ((a << 24) | (b << 16) | (g << 8) | r) >>> 0;\n    }\n    return ((r << 24) | (g << 16) | (b << 8) | a) >>> 0;\n}\n/**\n * Returns true if the given object has the given \"own\" property.\n *\n * @param obj\n * @param prop\n * @returns\n */\nexport function hasOwn(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n/**\n * Converts degrees to radians\n *\n * @param degrees\n * @returns\n */\nexport function deg2Rad(degrees) {\n    return (degrees * Math.PI) / 180;\n}\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * EventEmitter base class\n */\nexport class EventEmitter {\n    eventListeners = {};\n    on(event, listener) {\n        let listeners = this.eventListeners[event];\n        if (!listeners) {\n            listeners = [];\n        }\n        listeners.push(listener);\n        this.eventListeners[event] = listeners;\n    }\n    off(event, listener) {\n        const listeners = this.eventListeners[event];\n        if (!listeners) {\n            return;\n        }\n        if (!listener) {\n            delete this.eventListeners[event];\n            return;\n        }\n        const index = listeners.indexOf(listener);\n        if (index >= 0) {\n            listeners.splice(index, 1);\n        }\n    }\n    once(event, listener) {\n        const onceListener = (target, data) => {\n            this.off(event, onceListener);\n            listener(target, data);\n        };\n        this.on(event, onceListener);\n    }\n    emit(event, data) {\n        const listeners = this.eventListeners[event];\n        if (!listeners) {\n            return;\n        }\n        [...listeners].forEach((listener) => {\n            listener(this, data);\n        });\n    }\n    removeAllListeners() {\n        this.eventListeners = {};\n    }\n}\n//# sourceMappingURL=EventEmitter.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Core Utility Functions\n *\n * @module\n */\nexport const EPSILON = 0.000001;\nexport let ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport const RANDOM = Math.random;\nexport const ANGLE_ORDER = 'zyx';\nconst degree = Math.PI / 180;\nexport const setMatrixArrayType = (type) => {\n    ARRAY_TYPE = type;\n};\nexport const toRadian = (a) => {\n    return a * degree;\n};\nexport const equals = (a, b) => {\n    return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n};\nexport const rand = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\nexport const isPowerOfTwo = (value) => {\n    return value && !(value & (value - 1));\n};\nconst getTimingBezier = (a, b, c, d) => {\n    const xc = 3.0 * a;\n    const xb = 3.0 * (c - a) - xc;\n    const xa = 1.0 - xc - xb;\n    const yc = 3.0 * b;\n    const yb = 3.0 * (d - b) - yc;\n    const ya = 1.0 - yc - yb;\n    return function (time) {\n        if (time >= 1.0) {\n            return 1;\n        }\n        if (time <= 0) {\n            return 0;\n        }\n        let t = 0.5, cbx, cbxd, dx;\n        for (let it = 0; it < 20; it++) {\n            cbx = t * (t * (t * xa + xb) + xc);\n            dx = time - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                return t * (t * (t * ya + yb) + yc);\n            }\n            // Cubic bezier derivative.\n            cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n            if (cbxd > 1e-10 && cbxd < 1e-10) {\n                // Problematic. Fall back to binary search method.\n                break;\n            }\n            t += dx / cbxd;\n        }\n        // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n        let minT = 0;\n        let maxT = 1;\n        for (let it = 0; it < 20; it++) {\n            t = 0.5 * (minT + maxT);\n            cbx = t * (t * (t * xa + xb) + xc);\n            dx = time - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc);\n            }\n            if (dx < 0) {\n                maxT = t;\n            }\n            else {\n                minT = t;\n            }\n        }\n    };\n};\nexport const getTimingFunction = (str) => {\n    switch (str) {\n        case 'linear':\n            return function (time) {\n                return time;\n            };\n        case 'ease':\n            return getTimingBezier(0.25, 0.1, 0.25, 1.0);\n        case 'ease-in':\n            return getTimingBezier(0.42, 0, 1.0, 1.0);\n        case 'ease-out':\n            return getTimingBezier(0, 0, 0.58, 1.0);\n        case 'ease-in-out':\n            return getTimingBezier(0.42, 0, 0.58, 1.0);\n        case 'ease-in-sine':\n            return getTimingBezier(0.12, 0, 0.39, 0);\n        case 'ease-out-sine':\n            return getTimingBezier(0.12, 0, 0.39, 0);\n        case 'ease-in-out-sine':\n            return getTimingBezier(0.37, 0, 0.63, 1);\n        case 'ease-in-cubic':\n            return getTimingBezier(0.32, 0, 0.67, 0);\n        case 'ease-out-cubic':\n            return getTimingBezier(0.33, 1, 0.68, 1);\n        case 'ease-in-out-cubic':\n            return getTimingBezier(0.65, 0, 0.35, 1);\n        case 'ease-in-circ':\n            return getTimingBezier(0.55, 0, 1, 0.45);\n        case 'ease-out-circ':\n            return getTimingBezier(0, 0.55, 0.45, 1);\n        case 'ease-in-out-circ':\n            return getTimingBezier(0.85, 0, 0.15, 1);\n        case 'ease-in-back':\n            return getTimingBezier(0.36, 0, 0.66, -0.56);\n        case 'ease-out-back':\n            return getTimingBezier(0.34, 1.56, 0.64, 1);\n        case 'ease-in-out-back':\n            return getTimingBezier(0.68, -0.6, 0.32, 1.6);\n        case 'step-start':\n            return function () {\n                return 1;\n            };\n        case 'step-end':\n            return function (time) {\n                return time === 1 ? 1 : 0;\n            };\n        default:\n            // eslint-disable-next-line no-case-declarations\n            const s = 'cubic-bezier(';\n            if (str && str.indexOf(s) === 0) {\n                const parts = str\n                    .substr(s.length, str.length - s.length - 1)\n                    .split(',');\n                if (parts.length !== 4) {\n                    console.warn('Unknown timing function: ' + str);\n                    // Fallback: use linear.\n                    return function (time) {\n                        return time;\n                    };\n                }\n                const a = parseFloat(parts[0] || '0.42');\n                const b = parseFloat(parts[1] || '0');\n                const c = parseFloat(parts[2] || '1');\n                const d = parseFloat(parts[3] || '1');\n                if (isNaN(a) || isNaN(b) || isNaN(c) || isNaN(d)) {\n                    console.warn(' Unknown timing function: ' + str);\n                    // Fallback: use linear.\n                    return function (time) {\n                        return time;\n                    };\n                }\n                return getTimingBezier(a, b, c, d);\n            }\n            else {\n                console.warn('Unknown timing function: ' + str);\n                // Fallback: use linear.\n                return function (time) {\n                    return time;\n                };\n            }\n    }\n};\nif (!Math.hypot)\n    Math.hypot = (...args) => {\n        let y = 0, i = args.length;\n        while (i--) {\n            y += args[i] * args[i];\n        }\n        return Math.sqrt(y);\n    };\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const getNormalizedRgbaComponents = (rgba) => {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = rgba & 0xff;\n    return [r / 255, g / 255, b / 255, a / 255];\n};\nexport const getRgbaComponents = (rgba) => {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = rgba & 0xff;\n    return [r, g, b, a];\n};\nexport const norm = (rgba) => {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = rgba & 0xff;\n    const rgbaArr = [r / 255, g / 255, b / 255, a / 255];\n    rgbaArr[0] = Math.max(0, Math.min(255, rgbaArr[0]));\n    rgbaArr[1] = Math.max(0, Math.min(255, rgbaArr[1]));\n    rgbaArr[2] = Math.max(0, Math.min(255, rgbaArr[2]));\n    rgbaArr[3] = Math.max(0, Math.min(255, rgbaArr[3]));\n    let v = ((rgbaArr[3] | 0) << 24) +\n        ((rgbaArr[0] | 0) << 16) +\n        ((rgbaArr[1] | 0) << 8) +\n        (rgbaArr[2] | 0);\n    if (v < 0) {\n        v = 0xffffffff + v + 1;\n    }\n    return v;\n};\nexport function getNormalizedAlphaComponent(rgba) {\n    return (rgba & 0xff) / 255.0;\n}\n/**\n * Get a CSS color string from a RGBA color\n *\n * @param color\n * @returns\n */\nexport function getRgbaString(color) {\n    const r = Math.floor(color[0] * 255.0);\n    const g = Math.floor(color[1] * 255.0);\n    const b = Math.floor(color[2] * 255.0);\n    const a = Math.floor(color[3] * 255.0);\n    return `rgba(${r},${g},${b},${a.toFixed(4)})`;\n}\nexport function createBound(x1, y1, x2, y2, out) {\n    if (out) {\n        out.x1 = x1;\n        out.y1 = y1;\n        out.x2 = x2;\n        out.y2 = y2;\n        return out;\n    }\n    return {\n        x1,\n        y1,\n        x2,\n        y2,\n    };\n}\nexport function intersectBound(a, b, out) {\n    const intersection = createBound(Math.max(a.x1, b.x1), Math.max(a.y1, b.y1), Math.min(a.x2, b.x2), Math.min(a.y2, b.y2), out);\n    if (intersection.x1 < intersection.x2 && intersection.y1 < intersection.y2) {\n        return intersection;\n    }\n    return createBound(0, 0, 0, 0, intersection);\n}\nexport function intersectRect(a, b) {\n    const x = Math.max(a.x, b.x);\n    const y = Math.max(a.y, b.y);\n    const width = Math.min(a.x + a.width, b.x + b.width) - x;\n    const height = Math.min(a.y + a.height, b.y + b.height) - y;\n    if (width > 0 && height > 0) {\n        return {\n            x,\n            y,\n            width,\n            height,\n        };\n    }\n    return {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0,\n    };\n}\nexport function compareRect(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a === null || b === null) {\n        return false;\n    }\n    return (a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height);\n}\nexport function isBoundPositive(bound) {\n    return bound.x1 < bound.x2 && bound.y1 < bound.y2;\n}\nexport function isRectPositive(rect) {\n    return rect.width > 0 && rect.height > 0;\n}\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class CoreContextTexture {\n    textureSource;\n    constructor(textureSource) {\n        this.textureSource = textureSource;\n    }\n}\n//# sourceMappingURL=CoreContextTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CoreContextTexture } from './CoreContextTexture.js';\nexport class CoreRenderer {\n    stage;\n    constructor(stage) {\n        this.stage = stage;\n    }\n}\n//# sourceMappingURL=CoreRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class CoreRenderOp {\n}\n//# sourceMappingURL=CoreRenderOp.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class CoreShader {\n    // abstract draw(): void;\n    static makeCacheKey(props) {\n        return false;\n    }\n    static resolveDefaults(props) {\n        return {};\n    }\n}\n//# sourceMappingURL=CoreShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n//#endregion Types\nexport function createShader(gl, type, source) {\n    const shader = gl.createShader(type);\n    if (!shader) {\n        throw new Error();\n    }\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (success) {\n        return shader;\n    }\n    console.log(gl.getShaderInfoLog(shader));\n    gl.deleteShader(shader);\n}\nexport function createProgram(gl, vertexShader, fragmentShader) {\n    const program = gl.createProgram();\n    if (!program) {\n        throw new Error();\n    }\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    const success = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (success) {\n        return program;\n    }\n    console.log(gl.getProgramInfoLog(program));\n    gl.deleteProgram(program);\n    return undefined;\n}\n//# sourceMappingURL=ShaderUtils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generic WebGL Utility Functions\n *\n * @remarks\n * Nothing here should be coupled to Renderer logic / types.\n *\n * @param gl\n * @returns\n */\nexport function isWebGl2(gl) {\n    return (self.WebGL2RenderingContext && gl instanceof self.WebGL2RenderingContext);\n}\n//# sourceMappingURL=WebGlUtils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy, hasOwn } from '../../../utils.js';\nimport { CoreShader } from '../CoreShader.js';\nimport { createProgram, createShader, } from './internal/ShaderUtils.js';\nimport { isWebGl2 } from './internal/WebGlUtils.js';\nexport class WebGlCoreShader extends CoreShader {\n    boundBufferCollection = null;\n    buffersBound = false;\n    program;\n    /**\n     * Vertex Array Object\n     *\n     * @remarks\n     * Used by WebGL2 Only\n     */\n    vao;\n    renderer;\n    gl;\n    attributeBuffers;\n    attributeLocations;\n    attributeNames;\n    uniformLocations;\n    uniformTypes;\n    supportsIndexedTextures;\n    constructor(options) {\n        super();\n        const renderer = (this.renderer = options.renderer);\n        const gl = (this.gl = this.renderer.gl);\n        this.supportsIndexedTextures = options.supportsIndexedTextures || false;\n        // Check that extensions are supported\n        const webGl2 = isWebGl2(gl);\n        const requiredExtensions = (webGl2 && options.webgl2Extensions) ||\n            (!webGl2 && options.webgl1Extensions) ||\n            [];\n        const glVersion = webGl2 ? '2.0' : '1.0';\n        requiredExtensions.forEach((extensionName) => {\n            if (!gl.getExtension(extensionName)) {\n                throw new Error(`Shader \"${this.constructor.name}\" requires extension \"${extensionName}\" for WebGL ${glVersion} but wasn't found`);\n            }\n        });\n        // Gather shader sources\n        // - If WebGL 2 and special WebGL 2 sources are provided, we copy those sources and delete\n        // the extra copy of them to save memory.\n        // TODO: This could be further made optimal by just caching the compiled shaders and completely deleting\n        // the source code\n        const shaderSources = options.shaderSources ||\n            this.constructor.shaderSources;\n        if (!shaderSources) {\n            throw new Error(`Shader \"${this.constructor.name}\" is missing shaderSources.`);\n        }\n        else if (webGl2 && shaderSources?.webGl2) {\n            shaderSources.fragment = shaderSources.webGl2.fragment;\n            shaderSources.vertex = shaderSources.webGl2.vertex;\n            delete shaderSources.webGl2;\n        }\n        const textureUnits = renderer.system.parameters.MAX_VERTEX_TEXTURE_IMAGE_UNITS;\n        const vertexSource = shaderSources.vertex instanceof Function\n            ? shaderSources.vertex(textureUnits)\n            : shaderSources.vertex;\n        const fragmentSource = shaderSources.fragment instanceof Function\n            ? shaderSources.fragment(textureUnits)\n            : shaderSources.fragment;\n        const vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexSource);\n        const fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, fragmentSource);\n        if (!vertexShader || !fragmentShader) {\n            throw new Error();\n        }\n        const program = createProgram(gl, vertexShader, fragmentShader);\n        if (!program) {\n            throw new Error();\n        }\n        this.program = program;\n        if (webGl2) {\n            const vao = gl.createVertexArray();\n            if (!vao) {\n                throw new Error();\n            }\n            this.vao = vao;\n            gl.bindVertexArray(this.vao);\n        }\n        this.attributeLocations = {};\n        this.attributeBuffers = {};\n        this.attributeNames = [];\n        [...options.attributes].forEach((attributeName) => {\n            const location = gl.getAttribLocation(this.program, attributeName);\n            if (location < 0) {\n                throw new Error(`${this.constructor.name}: Vertex shader must have an attribute \"${attributeName}\"!`);\n            }\n            const buffer = gl.createBuffer();\n            if (!buffer) {\n                throw new Error(`${this.constructor.name}: Could not create buffer for attribute \"${attributeName}\"`);\n            }\n            this.attributeLocations[attributeName] = location;\n            this.attributeBuffers[attributeName] = buffer;\n            this.attributeNames.push(attributeName);\n        });\n        this.uniformLocations = {};\n        this.uniformTypes = {};\n        options.uniforms.forEach((uniform) => {\n            const location = gl.getUniformLocation(this.program, uniform.name);\n            this.uniformTypes[uniform.name] = uniform.uniform;\n            if (!location) {\n                console.warn(`Shader \"${this.constructor.name}\" could not get uniform location for \"${uniform.name}\"`);\n                return;\n            }\n            this.uniformLocations[uniform.name] = location;\n        });\n    }\n    bindBufferAttribute(location, buffer, attribute) {\n        const gl = this.gl;\n        gl.enableVertexAttribArray(location);\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.vertexAttribPointer(location, attribute.size, attribute.type, attribute.normalized, attribute.stride, attribute.offset);\n    }\n    disableAttribute(location) {\n        this.gl.disableVertexAttribArray(location);\n    }\n    disableAttributes() {\n        for (const loc in this.attributeLocations) {\n            this.disableAttribute(this.attributeLocations[loc]);\n        }\n        this.boundBufferCollection = null;\n    }\n    /**\n     * Given two sets of Shader props destined for this Shader, determine if they can be batched together\n     * to reduce the number of draw calls.\n     *\n     * @remarks\n     * This is used by the {@link WebGlCoreRenderer} to determine if it can batch multiple consecutive draw\n     * calls into a single draw call.\n     *\n     * By default, this returns false (meaning no batching is allowed), but can be\n     * overridden by child classes to provide more efficient batching.\n     *\n     * @param propsA\n     * @param propsB\n     * @returns\n     */\n    canBatchShaderProps(propsA, propsB) {\n        return false;\n    }\n    bindRenderOp(renderOp, props) {\n        this.bindBufferCollection(renderOp.buffers);\n        if (renderOp.textures.length > 0) {\n            this.bindTextures(renderOp.textures);\n        }\n        const { gl } = renderOp;\n        // Bind standard automatic uniforms\n        this.setUniform('u_resolution', [gl.canvas.width, gl.canvas.height]); // !!!\n        this.setUniform('u_pixelRatio', renderOp.options.pixelRatio);\n        if (props) {\n            // Bind optional automatic uniforms\n            // These are only bound if their keys are present in the props.\n            if (hasOwn(props, '$dimensions')) {\n                let dimensions = props.$dimensions;\n                if (!dimensions) {\n                    dimensions = renderOp.dimensions;\n                }\n                this.setUniform('u_dimensions', [dimensions.width, dimensions.height]);\n            }\n            if (hasOwn(props, '$alpha')) {\n                let alpha = props.$alpha;\n                if (!alpha) {\n                    alpha = renderOp.alpha;\n                }\n                this.setUniform('u_alpha', alpha);\n            }\n            this.bindProps(props);\n        }\n    }\n    setUniform(name, ...value) {\n        // @ts-expect-error Typing of args is too funky apparently for TS\n        this.gl[this.uniformTypes[name]](this.uniformLocations[name], ...value);\n    }\n    bindBufferCollection(buffer) {\n        if (this.boundBufferCollection === buffer) {\n            return;\n        }\n        for (const attributeName in this.attributeLocations) {\n            const resolvedBuffer = buffer.getBuffer(attributeName);\n            const resolvedInfo = buffer.getAttributeInfo(attributeName);\n            assertTruthy(resolvedBuffer, `Buffer for \"${attributeName}\" not found`);\n            assertTruthy(resolvedInfo);\n            this.bindBufferAttribute(this.attributeLocations[attributeName], resolvedBuffer, resolvedInfo);\n        }\n        this.boundBufferCollection = buffer;\n    }\n    bindProps(props) {\n        // Implement in child class\n    }\n    bindTextures(textures) {\n        // no defaults\n    }\n    attach() {\n        this.gl.useProgram(this.program);\n        if (isWebGl2(this.gl) && this.vao) {\n            this.gl.bindVertexArray(this.vao);\n        }\n    }\n    detach() {\n        this.disableAttributes();\n    }\n    static shaderSources;\n}\n//# sourceMappingURL=WebGlCoreShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CoreRenderOp } from '../CoreRenderOp.js';\nimport { WebGlCoreShader } from './WebGlCoreShader.js';\nconst MAX_TEXTURES = 8; // TODO: get from gl\n/**\n * Can render multiple quads with multiple textures (up to vertex shader texture limit)\n *\n */\nexport class WebGlCoreRenderOp extends CoreRenderOp {\n    gl;\n    options;\n    buffers;\n    shader;\n    shaderProps;\n    alpha;\n    clippingRect;\n    dimensions;\n    bufferIdx;\n    zIndex;\n    length = 0;\n    numQuads = 0;\n    textures = [];\n    maxTextures;\n    constructor(gl, options, buffers, shader, shaderProps, alpha, clippingRect, dimensions, bufferIdx, zIndex) {\n        super();\n        this.gl = gl;\n        this.options = options;\n        this.buffers = buffers;\n        this.shader = shader;\n        this.shaderProps = shaderProps;\n        this.alpha = alpha;\n        this.clippingRect = clippingRect;\n        this.dimensions = dimensions;\n        this.bufferIdx = bufferIdx;\n        this.zIndex = zIndex;\n        this.gl = gl;\n        this.maxTextures = shader.supportsIndexedTextures\n            ? gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS)\n            : 1;\n    }\n    addTexture(texture) {\n        const { textures, maxTextures } = this;\n        const existingIdx = textures.findIndex((t) => t === texture);\n        if (existingIdx !== -1) {\n            return existingIdx;\n        }\n        const newIdx = textures.length;\n        if (newIdx >= maxTextures) {\n            return 0xffffffff;\n        }\n        this.textures.push(texture);\n        return newIdx;\n    }\n    draw() {\n        const { gl, shader, shaderProps, options } = this;\n        // shaderOp.draw(this);\n        const { shManager } = options;\n        shManager.useShader(shader);\n        shader.bindRenderOp(this, shaderProps);\n        // TODO: Reduce calculations required\n        const quadIdx = (this.bufferIdx / 24) * 6 * 2;\n        // TODO: Move these somewhere else?\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        // Clipping\n        if (this.clippingRect) {\n            const { x, y, width, height } = this.clippingRect;\n            const pixelRatio = options.pixelRatio;\n            const canvasHeight = options.canvas.height;\n            const clipX = Math.round(x * pixelRatio);\n            const clipWidth = Math.round(width * pixelRatio);\n            const clipHeight = Math.round(height * pixelRatio);\n            const clipY = Math.round(canvasHeight - clipHeight - y * pixelRatio);\n            gl.enable(gl.SCISSOR_TEST);\n            gl.scissor(clipX, clipY, clipWidth, clipHeight);\n        }\n        else {\n            gl.disable(gl.SCISSOR_TEST);\n        }\n        gl.drawElements(gl.TRIANGLES, 6 * this.numQuads, gl.UNSIGNED_SHORT, quadIdx);\n    }\n}\n//# sourceMappingURL=WebGlCoreRenderOp.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Get device specific webgl parameters\n * @param gl\n */\nexport function getWebGlParameters(gl) {\n    const params = {\n        MAX_RENDERBUFFER_SIZE: 0,\n        MAX_TEXTURE_SIZE: 0,\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-explicit-any\n        MAX_VIEWPORT_DIMS: 0,\n        MAX_VERTEX_TEXTURE_IMAGE_UNITS: 0,\n        MAX_TEXTURE_IMAGE_UNITS: 0,\n        MAX_COMBINED_TEXTURE_IMAGE_UNITS: 0,\n        MAX_VERTEX_ATTRIBS: 0,\n        MAX_VARYING_VECTORS: 0,\n        MAX_VERTEX_UNIFORM_VECTORS: 0,\n        MAX_FRAGMENT_UNIFORM_VECTORS: 0,\n    };\n    // Map over all parameters and get them\n    const keys = Object.keys(params);\n    keys.forEach((key) => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        params[key] = gl.getParameter(gl[key]);\n    });\n    return params;\n}\n/**\n * Get device webgl extensions\n * @param gl\n */\nexport function getWebGlExtensions(gl) {\n    const extensions = {\n        ANGLE_instanced_arrays: null,\n        WEBGL_compressed_texture_s3tc: null,\n        WEBGL_compressed_texture_astc: null,\n        WEBGL_compressed_texture_etc: null,\n        WEBGL_compressed_texture_etc1: null,\n        WEBGL_compressed_texture_pvrtc: null,\n        WEBKIT_WEBGL_compressed_texture_pvrtc: null,\n        WEBGL_compressed_texture_s3tc_srgb: null,\n        OES_vertex_array_object: null,\n    };\n    // Map over all extensions and get them\n    const keys = Object.keys(extensions);\n    keys.forEach((key) => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        extensions[key] = gl.getExtension(key);\n    });\n    return extensions;\n}\n/**\n * Allocate big memory chunk that we\n * can re-use to draw quads\n * @param size\n */\nexport function createIndexBuffer(gl, size) {\n    if (!gl) {\n        throw new Error('No WebGL context');\n    }\n    const maxQuads = ~~(size / 80);\n    const indices = new Uint16Array(maxQuads * 6);\n    for (let i = 0, j = 0; i < maxQuads; i += 6, j += 4) {\n        indices[i] = j;\n        indices[i + 1] = j + 1;\n        indices[i + 2] = j + 2;\n        indices[i + 3] = j + 2;\n        indices[i + 4] = j + 1;\n        indices[i + 5] = j + 3;\n    }\n    const buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\n}\n//# sourceMappingURL=RendererUtils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../../utils.js';\nimport { isPowerOfTwo } from '../../utils.js';\nimport { CoreContextTexture } from '../CoreContextTexture.js';\nimport { isWebGl2 } from './internal/WebGlUtils.js';\nconst TRANSPARENT_TEXTURE_DATA = new Uint8Array([0, 0, 0, 0]);\n/**\n * A wrapper around a WebGLTexture that handles loading the texture data\n * from a Texture source and uploading it to the GPU as well as freeing\n * the uploaded texture.\n *\n * @remarks\n * When accessing the ctxTexture property, the texture will be loaded if\n * it hasn't been already. ctxTexture will always return a valid WebGLTexture\n * and trigger the loading/uploading of the texture's data if it hasn't been\n * loaded yet.\n */\nexport class WebGlCoreCtxTexture extends CoreContextTexture {\n    gl;\n    _nativeCtxTexture = null;\n    _state = 'freed';\n    _w = 0;\n    _h = 0;\n    constructor(gl, textureSource) {\n        super(textureSource);\n        this.gl = gl;\n    }\n    get ctxTexture() {\n        if (this._state === 'freed') {\n            this.load();\n        }\n        assertTruthy(this._nativeCtxTexture);\n        return this._nativeCtxTexture;\n    }\n    get w() {\n        return this._w;\n    }\n    get h() {\n        return this._h;\n    }\n    /**\n     * Load the texture data from the Texture source and upload it to the GPU\n     *\n     * @remarks\n     * This method is called automatically when accessing the ctxTexture property\n     * if the texture hasn't been loaded yet. But it can also be called manually\n     * to force the texture to be pre-loaded prior to accessing the ctxTexture\n     * property.\n     */\n    load() {\n        // If the texture is already loading or loaded, don't load it again.\n        if (this._state === 'loading' || this._state === 'loaded') {\n            return;\n        }\n        this._state = 'loading';\n        this.textureSource.setState('loading');\n        this.onLoadRequest()\n            .then(({ width, height }) => {\n            this._state = 'loaded';\n            this._w = width;\n            this._h = height;\n            // Update the texture source's width and height so that it can be used\n            // for rendering.\n            this.textureSource.setState('loaded', { width, height });\n        })\n            .catch((err) => {\n            this._state = 'failed';\n            this.textureSource.setState('failed', err);\n            console.error(err);\n        });\n    }\n    /**\n     * Called when the texture data needs to be loaded and uploaded to a texture\n     */\n    async onLoadRequest() {\n        this._nativeCtxTexture = this.createNativeCtxTexture();\n        const { gl } = this;\n        // On initial load request, create a 1x1 transparent texture to use until\n        // the texture data is finally loaded.\n        gl.bindTexture(gl.TEXTURE_2D, this._nativeCtxTexture);\n        // linear texture filtering\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        // texture wrapping method\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.bindTexture(gl.TEXTURE_2D, this._nativeCtxTexture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, TRANSPARENT_TEXTURE_DATA);\n        const textureData = await this.textureSource?.getTextureData();\n        let width = 0;\n        let height = 0;\n        assertTruthy(this._nativeCtxTexture);\n        // If textureData is null, the texture is empty (0, 0) and we don't need to\n        // upload any data to the GPU.\n        if (textureData.data instanceof ImageBitmap ||\n            textureData.data instanceof ImageData) {\n            const data = textureData.data;\n            width = data.width;\n            height = data.height;\n            gl.bindTexture(gl.TEXTURE_2D, this._nativeCtxTexture);\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, !!textureData.premultiplyAlpha);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n            // generate mipmaps for power-of-2 textures or in WebGL2RenderingContext\n            if (isWebGl2(gl) || (isPowerOfTwo(width) && isPowerOfTwo(height))) {\n                gl.generateMipmap(gl.TEXTURE_2D);\n            }\n        }\n        else if (textureData.data === null) {\n            width = 0;\n            height = 0;\n            // Reset to a 1x1 transparent texture\n            gl.bindTexture(gl.TEXTURE_2D, this._nativeCtxTexture);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, TRANSPARENT_TEXTURE_DATA);\n        }\n        else {\n            console.error(`WebGlCoreCtxTexture.onLoadRequest: Unexpected textureData returned`, textureData);\n        }\n        return {\n            width,\n            height,\n        };\n    }\n    /**\n     * Free the WebGLTexture from the GPU\n     *\n     * @returns\n     */\n    free() {\n        if (this._state === 'freed') {\n            return;\n        }\n        this._state = 'freed';\n        this._w = 0;\n        this._h = 0;\n        if (!this._nativeCtxTexture) {\n            return;\n        }\n        this.gl.deleteTexture(this._nativeCtxTexture);\n        this._nativeCtxTexture = null;\n    }\n    createNativeCtxTexture() {\n        const nativeTexture = this.gl.createTexture();\n        if (!nativeTexture) {\n            throw new Error('Could not create WebGL Texture');\n        }\n        return nativeTexture;\n    }\n}\n//# sourceMappingURL=WebGlCoreCtxTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter } from '../../common/EventEmitter.js';\n/**\n * Represents a source of texture data for a CoreContextTexture.\n *\n * @remarks\n * Texture sources are used to populate a CoreContextTexture when that texture\n * is loaded. Texture data retrieved by the CoreContextTexture by the\n * `getTextureData` method. It's the responsibility of the concerete `Texture`\n * subclass to implement this method appropriately.\n */\nexport class Texture extends EventEmitter {\n    txManager;\n    /**\n     * The dimensions of the texture\n     *\n     * @remarks\n     * Until the texture data is loaded for the first time the value will be\n     * `null`.\n     */\n    dimensions = null;\n    error = null;\n    state = 'loading';\n    constructor(txManager) {\n        super();\n        this.txManager = txManager;\n    }\n    /**\n     * Set the state of the texture\n     *\n     * @remark\n     * Intended for internal-use only but declared public so that it can be set\n     * by it's associated {@link CoreContextTexture}\n     *\n     * @param state\n     * @param args\n     */\n    setState(state, ...args) {\n        if (this.state !== state) {\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n            this.state = state;\n            if (state === 'loaded') {\n                const loadedArgs = args;\n                this.dimensions = loadedArgs[0];\n            }\n            else if (state === 'failed') {\n                const failedArgs = args;\n                this.error = failedArgs[0];\n            }\n            this.emit(state, ...args);\n        }\n    }\n    /**\n     * Make a cache key for this texture.\n     *\n     * @remarks\n     * Each concrete `Texture` subclass must implement this method to provide an\n     * appropriate cache key for the texture type including the texture's\n     * properties that uniquely identify a copy of the texture. If the texture\n     * type does not support caching, then this method should return `false`.\n     *\n     * @param props\n     * @returns\n     * A cache key for this texture or `false` if the texture type does not\n     * support caching.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    static makeCacheKey(props) {\n        return false;\n    }\n    /**\n     * Resolve the default values for the texture's properties.\n     *\n     * @remarks\n     * Each concrete `Texture` subclass must implement this method to provide\n     * default values for the texture's optional properties.\n     *\n     * @param props\n     * @returns\n     * The default values for the texture's properties.\n     */\n    static resolveDefaults(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    props) {\n        return {};\n    }\n}\n//# sourceMappingURL=Texture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture } from './Texture.js';\n/**\n * Texture consisting of only a 1x1 color pixel\n *\n * @remarks\n * The pixel color is set with the {@link ColorTextureProps.color} prop.\n *\n * This is the default texture used for a Node if it's\n * {@link INodeWritableProps.texture} prop is set to `null` (the default)\n *\n * Generally the 1x1 color pixel is stretched to whatever the set dimensions of\n * a Node are.\n */\nexport class ColorTexture extends Texture {\n    props;\n    constructor(txManager, props) {\n        super(txManager);\n        this.props = ColorTexture.resolveDefaults(props || {});\n    }\n    get color() {\n        return this.props.color;\n    }\n    set color(color) {\n        this.props.color = color;\n    }\n    async getTextureData() {\n        const pixelData32 = new Uint32Array([this.color]);\n        const pixelData8 = new Uint8ClampedArray(pixelData32.buffer);\n        return {\n            data: new ImageData(pixelData8, 1, 1),\n            premultiplyAlpha: true,\n        };\n    }\n    static makeCacheKey(props) {\n        const resolvedProps = ColorTexture.resolveDefaults(props);\n        return `ColorTexture,${resolvedProps.color}`;\n    }\n    static resolveDefaults(props) {\n        return {\n            color: props.color || 0xffffffff,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=ColorTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture, } from './Texture.js';\n/**\n * A Texture that is a sub-region of another Texture.\n *\n * @remarks\n * The parent texture can be a Sprite Sheet/Texture Atlas and set using the\n * {@link SubTextureProps.texture} prop. The sub-region relative to the parent\n * texture is defined with the {@link SubTextureProps.x},\n * {@link SubTextureProps.y}, {@link SubTextureProps.width}, and\n * {@link SubTextureProps.height} pixel values.\n */\nexport class SubTexture extends Texture {\n    props;\n    parentTexture;\n    constructor(txManager, props) {\n        super(txManager);\n        this.parentTexture = this.txManager.loadTexture(props.texture.txType, props.texture.props, props.texture.options);\n        this.props = SubTexture.resolveDefaults(props || {});\n        // If parent texture is already loaded / failed, trigger loaded event manually\n        // so that users get a consistent event experience.\n        // We do this in a microtask to allow listeners to be attached in the same\n        // synchronous task after calling loadTexture()\n        queueMicrotask(() => {\n            const parentTx = this.parentTexture;\n            if (parentTx.state === 'loaded') {\n                this.onParentTxLoaded(parentTx, parentTx.dimensions);\n            }\n            else if (parentTx.state === 'failed') {\n                this.onParentTxFailed(parentTx, parentTx.error);\n            }\n            parentTx.on('loaded', this.onParentTxLoaded);\n            parentTx.on('failed', this.onParentTxFailed);\n        });\n    }\n    onParentTxLoaded = () => {\n        // We ignore the parent's passed dimensions, and simply use the SubTexture's\n        // configured dimensions (because that's all that matters here)\n        this.setState('loaded', {\n            width: this.props.width,\n            height: this.props.height,\n        });\n    };\n    onParentTxFailed = (target, error) => {\n        this.setState('failed', error);\n    };\n    async getTextureData() {\n        return {\n            data: this.props,\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    static makeCacheKey(props) {\n        return false;\n    }\n    static resolveDefaults(props) {\n        return {\n            texture: props.texture,\n            x: props.x || 0,\n            y: props.y || 0,\n            width: props.width || 0,\n            height: props.height || 0,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=SubTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { WebGlCoreCtxTexture } from './WebGlCoreCtxTexture.js';\nexport class WebGlCoreCtxSubTexture extends WebGlCoreCtxTexture {\n    constructor(gl, textureSource) {\n        super(gl, textureSource);\n    }\n    async onLoadRequest() {\n        const props = await this.textureSource.getTextureData();\n        return {\n            width: props.data?.width || 0,\n            height: props.data?.height || 0,\n        };\n    }\n}\n//# sourceMappingURL=WebGlCoreCtxSubTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a collection of WebGL Buffers along with their associated\n * vertex attribute formats.\n */\nexport class BufferCollection {\n    config;\n    constructor(config) {\n        this.config = config;\n    }\n    /**\n     * Get the WebGLBuffer associated with the given attribute name if it exists.\n     *\n     * @param attributeName\n     * @returns\n     */\n    getBuffer(attributeName) {\n        return this.config.find((item) => item.attributes[attributeName])?.buffer;\n    }\n    /**\n     * Get the AttributeInfo associated with the given attribute name if it exists.\n     *\n     * @param attributeName\n     * @returns\n     */\n    getAttributeInfo(attributeName) {\n        return this.config.find((item) => item.attributes[attributeName])\n            ?.attributes[attributeName];\n    }\n}\n//# sourceMappingURL=BufferCollection.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy, createWebGLContext, hasOwn, mergeColorAlphaPremultiplied, } from '../../../utils.js';\nimport { CoreRenderer } from '../CoreRenderer.js';\nimport { WebGlCoreRenderOp } from './WebGlCoreRenderOp.js';\nimport { createIndexBuffer, getWebGlParameters, getWebGlExtensions, } from './internal/RendererUtils.js';\nimport { WebGlCoreCtxTexture } from './WebGlCoreCtxTexture.js';\nimport { Texture } from '../../textures/Texture.js';\nimport { ColorTexture } from '../../textures/ColorTexture.js';\nimport { SubTexture } from '../../textures/SubTexture.js';\nimport { WebGlCoreCtxSubTexture } from './WebGlCoreCtxSubTexture.js';\nimport { CoreShaderManager } from '../../CoreShaderManager.js';\nimport { BufferCollection } from './internal/BufferCollection.js';\nimport { compareRect, getNormalizedRgbaComponents, } from '../../lib/utils.js';\nimport { WebGlCoreShader } from './WebGlCoreShader.js';\nimport { RoundedRectangle } from './shaders/RoundedRectangle.js';\nconst WORDS_PER_QUAD = 24;\nconst BYTES_PER_QUAD = WORDS_PER_QUAD * 4;\nexport class WebGlCoreRenderer extends CoreRenderer {\n    //// WebGL Native Context and Data\n    gl;\n    system;\n    //// Core Managers\n    txManager;\n    shManager;\n    //// Options\n    options;\n    //// Persistent data\n    quadBuffer = new ArrayBuffer(1024 * 1024 * 4);\n    fQuadBuffer = new Float32Array(this.quadBuffer);\n    uiQuadBuffer = new Uint32Array(this.quadBuffer);\n    renderOps = [];\n    //// Render Op / Buffer Filling State\n    curBufferIdx = 0;\n    curRenderOp = null;\n    renderables = [];\n    //// Default Shader\n    defaultShader;\n    quadBufferCollection;\n    /**\n     * White pixel texture used by default when no texture is specified.\n     */\n    defaultTexture;\n    constructor(options) {\n        super(options.stage);\n        const { canvas, clearColor, bufferMemory } = options;\n        this.options = options;\n        this.txManager = options.txManager;\n        this.shManager = options.shManager;\n        this.defaultTexture = new ColorTexture(this.txManager);\n        const gl = createWebGLContext(canvas);\n        if (!gl) {\n            throw new Error('Unable to create WebGL context');\n        }\n        this.gl = gl;\n        const color = getNormalizedRgbaComponents(clearColor);\n        gl.viewport(0, 0, canvas.width, canvas.height);\n        gl.clearColor(color[0], color[1], color[2], color[3]);\n        createIndexBuffer(gl, bufferMemory);\n        this.system = {\n            parameters: getWebGlParameters(gl),\n            extensions: getWebGlExtensions(gl),\n        };\n        this.shManager.renderer = this;\n        this.defaultShader = this.shManager.loadShader('DefaultShader').shader;\n        const quadBuffer = gl.createBuffer();\n        assertTruthy(quadBuffer);\n        const stride = 6 * Float32Array.BYTES_PER_ELEMENT;\n        this.quadBufferCollection = new BufferCollection([\n            {\n                buffer: quadBuffer,\n                attributes: {\n                    a_position: {\n                        name: 'a_position',\n                        size: 2,\n                        type: gl.FLOAT,\n                        normalized: false,\n                        stride,\n                        offset: 0, // start at the beginning of the buffer\n                    },\n                    a_textureCoordinate: {\n                        name: 'a_textureCoordinate',\n                        size: 2,\n                        type: gl.FLOAT,\n                        normalized: false,\n                        stride,\n                        offset: 2 * Float32Array.BYTES_PER_ELEMENT,\n                    },\n                    a_color: {\n                        name: 'a_color',\n                        size: 4,\n                        type: gl.UNSIGNED_BYTE,\n                        normalized: true,\n                        stride,\n                        offset: 4 * Float32Array.BYTES_PER_ELEMENT,\n                    },\n                    a_textureIndex: {\n                        name: 'a_textureIndex',\n                        size: 1,\n                        type: gl.FLOAT,\n                        normalized: false,\n                        stride,\n                        offset: 5 * Float32Array.BYTES_PER_ELEMENT,\n                    },\n                },\n            },\n        ]);\n    }\n    reset() {\n        this.curBufferIdx = 0;\n        this.curRenderOp = null;\n        this.renderOps.length = 0;\n        this.gl.disable(this.gl.SCISSOR_TEST);\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n    }\n    getShaderManager() {\n        return this.shManager;\n    }\n    createCtxTexture(textureSource) {\n        if (textureSource instanceof SubTexture) {\n            return new WebGlCoreCtxSubTexture(this.gl, textureSource);\n        }\n        return new WebGlCoreCtxTexture(this.gl, textureSource);\n    }\n    /**\n     * This function adds a quad (a rectangle composed of two triangles) to the WebGL rendering pipeline.\n     *\n     * It takes a set of options that define the quad's properties, such as its dimensions, colors, texture, shader, and transformation matrix.\n     * The function first updates the shader properties with the current dimensions if necessary, then sets the default texture if none is provided.\n     * It then checks if a new render operation is needed, based on the current shader and clipping rectangle.\n     * If a new render operation is needed, it creates one and updates the current render operation.\n     * The function then adjusts the texture coordinates based on the texture options and adds the texture to the texture manager.\n     *\n     * Finally, it calculates the vertices for the quad, taking into account any transformations, and adds them to the quad buffer.\n     * The function updates the length and number of quads in the current render operation, and updates the current buffer index.\n     */\n    addQuad(params) {\n        const { fQuadBuffer, uiQuadBuffer } = this;\n        const { width, height, colorTl, colorTr, colorBl, colorBr, textureOptions, shader, shaderProps, alpha, clippingRect, tx, ty, ta, tb, tc, td, } = params;\n        let { texture } = params;\n        /**\n         * If the shader props contain any automatic properties, update it with the\n         * current dimensions that will be used to render the quad.\n         */\n        if (shaderProps && hasOwn(shaderProps, '$dimensions')) {\n            const dimensions = shaderProps.$dimensions;\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            dimensions.width = width;\n            dimensions.height = height;\n        }\n        texture = texture ?? this.defaultTexture;\n        assertTruthy(texture instanceof Texture, 'Invalid texture type');\n        let { curBufferIdx: bufferIdx, curRenderOp } = this;\n        const targetDims = {\n            width,\n            height,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        };\n        const targetShader = shader || this.defaultShader;\n        assertTruthy(targetShader instanceof WebGlCoreShader);\n        if (curRenderOp) {\n            // If the current render op is not the same shader, create a new one\n            // If the current render op's shader props are not compatible with the\n            // the new shader props, create a new one render op.\n            if (curRenderOp.shader !== targetShader ||\n                !compareRect(curRenderOp.clippingRect, clippingRect) ||\n                (curRenderOp.shader !== this.defaultShader &&\n                    (!shaderProps ||\n                        !curRenderOp.shader.canBatchShaderProps(curRenderOp.shaderProps, shaderProps)))) {\n                curRenderOp = null;\n            }\n        }\n        assertTruthy(targetShader instanceof WebGlCoreShader);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-explicit-any\n        if (!curRenderOp) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            this.newRenderOp(targetShader, shaderProps, alpha, targetDims, clippingRect, bufferIdx);\n            curRenderOp = this.curRenderOp;\n            assertTruthy(curRenderOp);\n        }\n        const flipX = textureOptions?.flipX ?? false;\n        const flipY = textureOptions?.flipY ?? false;\n        let texCoordX1 = 0;\n        let texCoordY1 = 0;\n        let texCoordX2 = 1;\n        let texCoordY2 = 1;\n        if (texture instanceof SubTexture) {\n            const { x: tx, y: ty, width: tw, height: th } = texture.props;\n            const { width: parentW = 0, height: parentH = 0 } = texture.parentTexture\n                .dimensions || { width: 0, height: 0 };\n            texCoordX1 = tx / parentW;\n            texCoordX2 = texCoordX1 + tw / parentW;\n            texCoordY1 = ty / parentH;\n            texCoordY2 = texCoordY1 + th / parentH;\n            texture = texture.parentTexture;\n        }\n        // Flip texture coordinates if dictated by texture options\n        if (flipX) {\n            [texCoordX1, texCoordX2] = [texCoordX2, texCoordX1];\n        }\n        if (flipY) {\n            [texCoordY1, texCoordY2] = [texCoordY2, texCoordY1];\n        }\n        const { txManager } = this.stage;\n        const ctxTexture = txManager.getCtxTexture(texture);\n        assertTruthy(ctxTexture instanceof WebGlCoreCtxTexture);\n        const textureIdx = this.addTexture(ctxTexture, bufferIdx);\n        curRenderOp = this.curRenderOp;\n        assertTruthy(curRenderOp);\n        // render quad advanced\n        if (tb !== 0 || tc !== 0) {\n            // Upper-Left\n            fQuadBuffer[bufferIdx++] = tx; // vertexX\n            fQuadBuffer[bufferIdx++] = ty; // vertexY\n            fQuadBuffer[bufferIdx++] = texCoordX1; // texCoordX\n            fQuadBuffer[bufferIdx++] = texCoordY1; // texCoordY\n            uiQuadBuffer[bufferIdx++] = colorTl; // color\n            fQuadBuffer[bufferIdx++] = textureIdx; // texIndex\n            // Upper-Right\n            fQuadBuffer[bufferIdx++] = tx + width * ta;\n            fQuadBuffer[bufferIdx++] = ty + width * tc;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY1;\n            uiQuadBuffer[bufferIdx++] = colorTr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Left\n            fQuadBuffer[bufferIdx++] = tx + height * tb;\n            fQuadBuffer[bufferIdx++] = ty + height * td;\n            fQuadBuffer[bufferIdx++] = texCoordX1;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = colorBl;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Right\n            fQuadBuffer[bufferIdx++] = tx + width * ta + height * tb;\n            fQuadBuffer[bufferIdx++] = ty + width * tc + height * td;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = colorBr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n        }\n        else {\n            // Calculate the right corner of the quad\n            // multiplied by the scale\n            const rightCornerX = tx + width * ta;\n            const rightCornerY = ty + height * td;\n            // Upper-Left\n            fQuadBuffer[bufferIdx++] = tx; // vertexX\n            fQuadBuffer[bufferIdx++] = ty; // vertexY\n            fQuadBuffer[bufferIdx++] = texCoordX1; // texCoordX\n            fQuadBuffer[bufferIdx++] = texCoordY1; // texCoordY\n            uiQuadBuffer[bufferIdx++] = colorTl; // color\n            fQuadBuffer[bufferIdx++] = textureIdx; // texIndex\n            // Upper-Right\n            fQuadBuffer[bufferIdx++] = rightCornerX;\n            fQuadBuffer[bufferIdx++] = ty;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY1;\n            uiQuadBuffer[bufferIdx++] = colorTr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Left\n            fQuadBuffer[bufferIdx++] = tx;\n            fQuadBuffer[bufferIdx++] = rightCornerY;\n            fQuadBuffer[bufferIdx++] = texCoordX1;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = colorBl;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Right\n            fQuadBuffer[bufferIdx++] = rightCornerX;\n            fQuadBuffer[bufferIdx++] = rightCornerY;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = colorBr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n        }\n        // Update the length of the current render op\n        curRenderOp.length += WORDS_PER_QUAD;\n        curRenderOp.numQuads++;\n        this.curBufferIdx = bufferIdx;\n    }\n    /**\n     * Replace the existing RenderOp with a new one that uses the specified Shader\n     * and starts at the specified buffer index.\n     *\n     * @param shader\n     * @param bufferIdx\n     */\n    newRenderOp(shader, shaderProps, alpha, dimensions, clippingRect, bufferIdx) {\n        const curRenderOp = new WebGlCoreRenderOp(this.gl, this.options, this.quadBufferCollection, shader, shaderProps, alpha, clippingRect, dimensions, bufferIdx, 0);\n        this.curRenderOp = curRenderOp;\n        this.renderOps.push(curRenderOp);\n    }\n    /**\n     * Add a texture to the current RenderOp. If the texture cannot be added to the\n     * current RenderOp, a new RenderOp will be created and the texture will be added\n     * to that one.\n     *\n     * If the texture cannot be added to the new RenderOp, an error will be thrown.\n     *\n     * @param texture\n     * @param bufferIdx\n     * @param recursive\n     * @returns Assigned Texture Index of the texture in the render op\n     */\n    addTexture(texture, bufferIdx, recursive) {\n        const { curRenderOp } = this;\n        assertTruthy(curRenderOp);\n        const textureIdx = curRenderOp.addTexture(texture);\n        // TODO: Refactor to be more DRY\n        if (textureIdx === 0xffffffff) {\n            if (recursive) {\n                throw new Error('Unable to add texture to render op');\n            }\n            const { shader, shaderProps, dimensions, clippingRect, alpha } = curRenderOp;\n            this.newRenderOp(shader, shaderProps, alpha, dimensions, clippingRect, bufferIdx);\n            return this.addTexture(texture, bufferIdx, true);\n        }\n        return textureIdx;\n    }\n    /**\n     * add RenderOp to the render pipeline\n     */\n    addRenderOp(renderable) {\n        this.renderOps.push(renderable);\n        this.curRenderOp = null;\n    }\n    /**\n     * Render the current set of RenderOps to render to the specified surface.\n     *\n     * TODO: 'screen' is the only supported surface at the moment.\n     *\n     * @param surface\n     */\n    render(surface = 'screen') {\n        const { gl, quadBuffer } = this;\n        const arr = new Float32Array(quadBuffer, 0, this.curBufferIdx);\n        const buffer = this.quadBufferCollection.getBuffer('a_position') ?? null;\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, arr, gl.DYNAMIC_DRAW);\n        const doLog = false; // idx++ % 100 === 0;\n        if (doLog) {\n            console.log('renderOps', this.renderOps.length);\n        }\n        this.renderOps.forEach((renderOp, i) => {\n            if (doLog) {\n                console.log('renderOp', i, renderOp.numQuads);\n            }\n            renderOp.draw();\n        });\n        // clean up\n        this.renderables = [];\n    }\n}\nconst idx = 0;\n//# sourceMappingURL=WebGlCoreRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter } from '../../../common/EventEmitter.js';\nexport class TrFontFace extends EventEmitter {\n    fontFamily;\n    descriptors;\n    loaded = false;\n    constructor(fontFamily, descriptors) {\n        super();\n        this.fontFamily = fontFamily;\n        this.descriptors = {\n            style: 'normal',\n            weight: 'normal',\n            stretch: 'normal',\n            ...descriptors,\n        };\n    }\n    /**\n     * Convert a TrFontFaceDescriptors to a FontFaceDescriptors which differ slightly\n     *\n     * @param descriptors\n     * @returns\n     */\n    static convertToCssFontFaceDescriptors(descriptors) {\n        return {\n            style: descriptors.style,\n            weight: typeof descriptors.weight === 'number'\n                ? `${descriptors.weight}`\n                : descriptors.weight,\n            stretch: descriptors.stretch,\n            unicodeRange: descriptors.unicodeRange,\n            variant: descriptors.variant,\n            featureSettings: descriptors.featureSettings,\n            display: descriptors.display,\n        };\n    }\n}\n//# sourceMappingURL=TrFontFace.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const SpecialCodepoints = {\n    LINE_FEED: 0x0a,\n    CARRIAGE_RETURN: 0x0d,\n    SPACE: 0x20,\n    TAB: 0x09,\n    ZERO_WIDTH_SPACE: 0x200b,\n    ZERO_WIDTH_NON_JOINER: 0x200c,\n    ZERO_WIDTH_JOINER: 0x200d,\n    LEFT_TO_RIGHT_MARK: 0x200e,\n    RIGHT_TO_LEFT_MARK: 0x200f,\n    LEFT_TO_RIGHT_EMBEDDING: 0x202a,\n    RIGHT_TO_LEFT_EMBEDDING: 0x202b,\n    POP_DIRECTIONAL_FORMATTING: 0x202c,\n    LEFT_TO_RIGHT_OVERRIDE: 0x202d,\n    RIGHT_TO_LEFT_OVERRIDE: 0x202e,\n    LINE_SEPARATOR: 0x2028,\n    PARAGRAPH_SEPARATOR: 0x2029,\n    OBJECT_REPLACEMENT_CHARACTER: 0xfffc,\n    REPLACEMENT_CHARACTER: 0xfffd,\n    ZERO_WIDTH_NO_BREAK_SPACE: 0xfeff,\n    LEFT_TO_RIGHT_ISOLATE: 0x2066,\n    RIGHT_TO_LEFT_ISOLATE: 0x2067,\n    FIRST_STRONG_ISOLATE: 0x2068,\n    POP_DIRECTIONAL_ISOLATE: 0x2069,\n    INHIBIT_SYMMETRIC_SWAPPING: 0x206a,\n    ACTIVATE_SYMMETRIC_SWAPPING: 0x206b,\n    INHIBIT_ARABIC_FORM_SHAPING: 0x206c,\n    ACTIVATE_ARABIC_FORM_SHAPING: 0x206d,\n    NATIONAL_DIGIT_SHAPES: 0x206e,\n    NOMINAL_DIGIT_SHAPES: 0x206f,\n    LEFT_TO_RIGHT_BOUNDARY: 0x200e,\n    RIGHT_TO_LEFT_BOUNDARY: 0x200f,\n};\n//# sourceMappingURL=SpecialCodepoints.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class FontShaper {\n}\n//# sourceMappingURL=FontShaper.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SpecialCodepoints } from '../../../renderers/SdfTextRenderer/internal/SpecialCodepoints.js';\nimport { FontShaper, } from './FontShaper.js';\nexport class SdfFontShaper extends FontShaper {\n    data;\n    kernings;\n    constructor(data) {\n        super();\n        this.data = data;\n        const kernings = (this.kernings = {});\n        data.kernings.forEach((kerning) => {\n            const second = kerning.second;\n            const firsts = (kernings[second] = kernings[second] || {});\n            firsts[kerning.first] = kerning.amount;\n        });\n        this.kernings = kernings;\n    }\n    *shapeText(props, codepoints) {\n        let codepointResult;\n        let lastGlyphId = undefined;\n        while ((codepointResult = codepoints.peek()) && !codepointResult.done) {\n            const codepoint = codepointResult.value;\n            const glyph = this.data.chars.find((char) => char.id === codepoint);\n            codepoints.next();\n            if (glyph !== undefined) {\n                // We found a glyph for this codepoint\n                // Yield the mapped glyph info\n                /**\n                 * Kerning includes any possible additional letter spacing\n                 */\n                const kerning = lastGlyphId !== undefined\n                    ? (this.kernings[glyph.id]?.[lastGlyphId] || 0) +\n                        props.letterSpacing\n                    : 0;\n                lastGlyphId = glyph.id;\n                yield {\n                    mapped: true,\n                    glyphId: glyph.id,\n                    codepoint,\n                    cluster: codepoints.lastIndex,\n                    xAdvance: glyph.xadvance + kerning,\n                    yAdvance: 0,\n                    xOffset: glyph.xoffset + kerning,\n                    yOffset: glyph.yoffset,\n                    xBearing: 0,\n                    yBearing: 0,\n                    width: glyph.width,\n                    height: glyph.height,\n                };\n            }\n            else {\n                // We didn't find a glyph for this codepoint\n                // Yield the unmapped codepoint info\n                // If this codepoint is a linebreak, we should reset the last glyph id\n                // so that the next glyph will not be kerned with the last glyph of the\n                // previous line.\n                if (codepoint === SpecialCodepoints.LINE_FEED) {\n                    lastGlyphId = undefined;\n                }\n                yield {\n                    mapped: false,\n                    codepoint,\n                    cluster: codepoints.lastIndex,\n                };\n            }\n        }\n    }\n}\n//# sourceMappingURL=SdfFontShaper.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// import type { Renderer } from '../../../Renderer';\nimport { assertTruthy } from '../../../../utils.js';\nimport { WebGlCoreRenderer } from '../../../renderers/webgl/WebGlCoreRenderer.js';\nimport { ImageTexture } from '../../../textures/ImageTexture.js';\nimport { TrFontFace } from '../TrFontFace.js';\nimport { SdfFontShaper } from './internal/SdfFontShaper.js';\nexport class SdfTrFontFace extends TrFontFace {\n    type;\n    texture;\n    data;\n    shaper;\n    glyphMap = new Map();\n    constructor(fontFamily, descriptors, type, stage, atlasUrl, atlasDataUrl) {\n        super(fontFamily, descriptors);\n        this.type = type;\n        const renderer = stage.renderer;\n        assertTruthy(renderer instanceof WebGlCoreRenderer, 'SDF Font Faces can only be used with the WebGL Renderer');\n        this.texture = stage.txManager.loadTexture('ImageTexture', {\n            src: atlasUrl,\n            // IMPORTANT: The SDF shader requires the alpha channel to NOT be\n            // premultiplied on the atlas texture. If it is premultiplied, the\n            // rendering of SDF glyphs (especially single-channel SDF fonts) will\n            // be very jagged.\n            premultiplyAlpha: false,\n        }, {\n            preload: true,\n        });\n        this.texture.on('loaded', () => {\n            this.checkLoaded();\n        });\n        // Set this.data to the fetched data from dataUrl\n        fetch(atlasDataUrl)\n            .then(async (response) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            this.data = await response.json();\n            // We know `data` is defined here, because we just set it\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.shaper = new SdfFontShaper(this.data);\n            // Add all the glyphs to the glyph map\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.data.chars.forEach((glyph) => {\n                this.glyphMap.set(glyph.id, glyph);\n            });\n            this.checkLoaded();\n        })\n            .catch(console.error);\n    }\n    getAtlasEntry(glyphId) {\n        const glyph = this.glyphMap.get(glyphId);\n        if (glyph === undefined) {\n            throw new Error(`Glyph ${glyphId} not found in font ${this.fontFamily}`);\n        }\n        return {\n            x: glyph.x,\n            y: glyph.y,\n            width: glyph.width,\n            height: glyph.height,\n        };\n    }\n    checkLoaded() {\n        if (this.loaded)\n            return;\n        if (this.texture.state === 'loaded' && this.data) {\n            this.loaded = true;\n            this.emit('loaded');\n        }\n    }\n}\n//# sourceMappingURL=SdfTrFontFace.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TrFontFace } from './TrFontFace.js';\nexport class WebTrFontFace extends TrFontFace {\n    fontFace;\n    fontUrl;\n    constructor(fontFamily, descriptors, fontUrl) {\n        super(fontFamily, descriptors);\n        // Filter out parentheses from fontUrl\n        const fontUrlWithoutParentheses = fontUrl.replace(/\\(|\\)/g, '');\n        // Defaults for descriptors resolved in the super constructor\n        const determinedDescriptors = this.descriptors;\n        // Convert TrFontFaceDescriptors to CSS FontFaceDescriptors\n        const cssDescriptors = {\n            style: determinedDescriptors.style,\n            weight: typeof determinedDescriptors.weight === 'number'\n                ? `${determinedDescriptors.weight}`\n                : determinedDescriptors.weight,\n            stretch: determinedDescriptors.stretch,\n            unicodeRange: determinedDescriptors.unicodeRange,\n            variant: determinedDescriptors.variant,\n            featureSettings: determinedDescriptors.featureSettings,\n            display: determinedDescriptors.display,\n        };\n        const fontFace = new FontFace(fontFamily, `url(${fontUrlWithoutParentheses})`, cssDescriptors);\n        fontFace\n            .load()\n            .then(() => {\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n            this.loaded = true;\n            this.emit('loaded');\n        })\n            .catch(console.error);\n        this.fontFace = fontFace;\n        this.fontUrl = fontUrl;\n    }\n}\n//# sourceMappingURL=WebTrFontFace.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Base class for Core extensions.\n *\n * @remarks\n * Core extensions are used to extend the Core Renderer with custom code such as\n * custom fonts, custom shaders, custom textures, custom animation functions,\n * and more.\n */\nexport class CoreExtension {\n}\n//# sourceMappingURL=CoreExtension.js.map"],"names":["createWebGLContext","canvas","config","assertTruthy","condition","message","mergeColorProgress","rgba1","rgba2","p","r1","g1","b1","a1","r2","g2","b2","a2","r","g","b","a","mergeColorAlpha","rgba","alpha","mergeColorAlphaPremultiplied","flipEndianess","newAlpha","hasOwn","obj","prop","EventEmitter","__publicField","event","listener","listeners","index","onceListener","target","data","isPowerOfTwo","value","getTimingBezier","c","d","xc","xb","xa","yc","yb","ya","time","t","cbx","cbxd","dx","it","minT","maxT","getTimingFunction","str","s","parts","args","y","i","getNormalizedRgbaComponents","getNormalizedAlphaComponent","getRgbaString","color","createBound","x1","y1","x2","y2","out","intersectBound","intersection","intersectRect","x","width","height","compareRect","isBoundPositive","bound","CoreContextTexture","textureSource","CoreRenderer","stage","CoreRenderOp","CoreShader","props","createShader","gl","type","source","shader","createProgram","vertexShader","fragmentShader","program","isWebGl2","WebGlCoreShader","options","renderer","webGl2","requiredExtensions","glVersion","extensionName","shaderSources","textureUnits","vertexSource","fragmentSource","vao","attributeName","location","buffer","uniform","attribute","loc","propsA","propsB","renderOp","dimensions","name","resolvedBuffer","resolvedInfo","textures","WebGlCoreRenderOp","buffers","shaderProps","clippingRect","bufferIdx","zIndex","texture","maxTextures","existingIdx","newIdx","shManager","quadIdx","pixelRatio","canvasHeight","clipX","clipWidth","clipHeight","clipY","getWebGlParameters","params","key","getWebGlExtensions","extensions","createIndexBuffer","size","maxQuads","indices","j","TRANSPARENT_TEXTURE_DATA","WebGlCoreCtxTexture","err","_a","textureData","nativeTexture","Texture","txManager","state","loadedArgs","failedArgs","_ColorTexture","pixelData32","pixelData8","resolvedProps","ColorTexture","_SubTexture","error","parentTx","SubTexture","WebGlCoreCtxSubTexture","_b","BufferCollection","item","WORDS_PER_QUAD","WebGlCoreRenderer","clearColor","bufferMemory","quadBuffer","stride","fQuadBuffer","uiQuadBuffer","colorTl","colorTr","colorBl","colorBr","textureOptions","tx","ty","ta","tb","tc","td","curRenderOp","targetDims","targetShader","flipX","flipY","texCoordX1","texCoordY1","texCoordX2","texCoordY2","tw","th","parentW","parentH","ctxTexture","textureIdx","rightCornerX","rightCornerY","recursive","renderable","surface","arr","TrFontFace","fontFamily","descriptors","SpecialCodepoints","FontShaper","SdfFontShaper","kernings","kerning","second","firsts","codepoints","codepointResult","lastGlyphId","codepoint","glyph","char","SdfTrFontFace","atlasUrl","atlasDataUrl","response","glyphId","WebTrFontFace","fontUrl","fontUrlWithoutParentheses","determinedDescriptors","cssDescriptors","fontFace","CoreExtension"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}